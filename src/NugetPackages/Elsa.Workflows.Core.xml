<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elsa.Workflows.Core</name>
    </assembly>
    <members>
        <member name="T:Elsa.Workflows.Activity">
            <summary>
            Base class for custom activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Id">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.NodeId">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Name">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Type">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Version">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.CanStartWorkflow">
            <summary>
            A flag indicating whether this activity can be used for starting a workflow.
            Usually used for triggers, but also used to disambiguate between two or more starting activities and no starting activity was specified.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activity.RunAsynchronously">
            <summary>
            A flag indicating if this activity should execute synchronously or asynchronously.
            By default, activities with an <see cref="T:Elsa.Workflows.ActivityKind"/> of <see cref="T:System.Action"/>, <see cref="T:System.Threading.Tasks.Task"/> or <see cref="T:Elsa.Workflows.Trigger"/>
            will execute synchronously, while activities of the <see cref="F:Elsa.Workflows.ActivityKind.Job"/> kind will execute asynchronously.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activity.CustomProperties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.SyntheticProperties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Metadata">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity.Behaviors">
            <summary>
            A collection of reusable behaviors to add to this activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.CanExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Override this method to return a value indicating whether the activity can execute.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.CanExecute(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Override this method to return a value indicating whether the activity can execute.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Override this method to implement activity-specific logic.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Override this method to implement activity-specific logic.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.OnSignalReceivedAsync(System.Object,Elsa.Workflows.SignalContext)">
            <summary>
            Override this method to handle any signals sent from downstream activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.OnSignalReceived(System.Object,Elsa.Workflows.SignalContext)">
            <summary>
            Override this method to handle any signals sent from downstream activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.OnSignalReceived(System.Type,System.Func{System.Object,Elsa.Workflows.SignalContext,System.Threading.Tasks.ValueTask})">
            <summary>
            Register a signal handler delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.OnSignalReceived``1(System.Func{``0,Elsa.Workflows.SignalContext,System.Threading.Tasks.ValueTask})">
            <summary>
            Register a signal handler delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.OnSignalReceived``1(System.Action{``0,Elsa.Workflows.SignalContext})">
            <summary>
            Register a signal handler delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity.CompleteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Notify the workflow that this activity completed.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activity`1">
            <summary>
            Base class for custom activities that return a result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activity`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activity`1.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activity`1.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activity`1.#ctor(Elsa.Workflows.Models.Output{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activity`1.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Behavior">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Behavior.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Behavior"/> class.
            </summary>
            <param name="owner">The activity that owns this behavior.</param>
        </member>
        <member name="P:Elsa.Workflows.Behavior.Owner">
            <summary>
            The activity that owns this behavior.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Behavior.OnSignalReceived(System.Type,System.Func{System.Object,Elsa.Workflows.SignalContext,System.Threading.Tasks.ValueTask})">
            <summary>
            Registers a delegate to be invoked when a signal of the specified type is received.
            </summary>
            <param name="signalType">The type of signal to register a handler for.</param>
            <param name="handler">The delegate to invoke when a signal of the specified type is received.</param>
        </member>
        <member name="M:Elsa.Workflows.Behavior.OnSignalReceived``1(System.Func{``0,Elsa.Workflows.SignalContext,System.Threading.Tasks.ValueTask})">
            <summary>
            Registers a delegate to be invoked when a signal of the specified type is received.
            </summary>
            <param name="handler">The delegate to invoke when a signal of the specified type is received.</param>
            <typeparam name="T">The type of signal to register a handler for.</typeparam>
        </member>
        <member name="M:Elsa.Workflows.Behavior.OnSignalReceived``1(System.Action{``0,Elsa.Workflows.SignalContext})">
            <summary>
            Registers a delegate to be invoked when a signal of the specified type is received.
            </summary>
            <param name="handler">The delegate to invoke when a signal of the specified type is received.</param>
            <typeparam name="T">The type of signal to register a handler for.</typeparam>
        </member>
        <member name="M:Elsa.Workflows.Behavior.OnSignalReceivedAsync(System.Object,Elsa.Workflows.SignalContext)">
            <summary>
            Registers a delegate to be invoked when a signal of the specified type is received.
            </summary>
            <param name="signal">The type of signal to register a handler for.</param>
            <param name="context">The signal context.</param>
        </member>
        <member name="M:Elsa.Workflows.Behavior.OnSignalReceived(System.Object,Elsa.Workflows.SignalContext)">
            <summary>
            Registers a delegate to be invoked when a signal of the specified type is received.
            </summary>
            <param name="signal">The signal to register a handler for.</param>
            <param name="context">The signal context.</param>
        </member>
        <member name="M:Elsa.Workflows.Behavior.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Elsa.Workflows.Behavior.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Invoked when the activity executes.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Elsa.Workflows.CodeActivity">
            <summary>
            Base class for custom activities with auto-complete behavior.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.CodeActivity.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivity.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.CodeActivityWithResult">
            <summary>
            Base class for custom activities with auto-complete behavior that return a result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.CodeActivityWithResult.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivityWithResult.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivityWithResult.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivityWithResult.#ctor(Elsa.Workflows.Models.Output,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.CodeActivityWithResult.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.CodeActivity`1">
            <summary>
            Base class for custom activities with auto-complete behavior that return a result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.CodeActivity`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivity`1.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivity`1.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.CodeActivity`1.#ctor(Elsa.Workflows.Models.Output{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.CodeActivity`1.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.SerializationOptionsConfiguratorBase">
            <summary>
            A base class for <see cref="T:Elsa.Common.Contracts.ISerializationOptionsConfigurator"/> implementations.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.SerializationOptionsConfiguratorBase.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.SerializationOptionsConfiguratorBase.GetModifiers">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Trigger">
            <summary>
            Represents an activity that acts as a workflow trigger.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Trigger.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Trigger.GetTriggerPayloadsAsync(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return trigger data.  
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger.GetTriggerPayloads(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return trigger data.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger.GetTriggerPayload(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return a trigger datum.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger`1.GetTriggerPayloadsAsync(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return trigger data.  
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger`1.GetTriggerPayloads(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return a trigger payload.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Trigger`1.GetTriggerPayload(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Override this method to return a trigger payload.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.WorkflowBase">
            <summary>
            A base class for implementing workflow definitions using the pipelineBuilder API.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase.BuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <summary>
            Invokes the the specified <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase.Build(Elsa.Workflows.Contracts.IWorkflowBuilder)">
            <summary>
            Invokes the specified <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/>.
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase.BeforeBuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <summary>
            Gives derived types a chance to setup the <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/> before the BuildAsync method is invoked.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase.AfterBuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <summary>
            Gives derived types a chance to setup the <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/> after the BuildAsync method was invoked.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.WorkflowBase`1">
            <summary>
            A base class for implementing workflow definitions that can return a result using the pipelineBuilder API.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase`1.#ctor">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.WorkflowBase`1.Result">
            <summary>
            Use this variable from your workflow to assign a result value. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase`1.BeforeBuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.WorkflowBase`1.AfterBuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.ActivationValidators.AllowAlwaysStrategy">
            <summary>
            Always allow the creation of a new workflow instance.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivationValidators.AllowAlwaysStrategy.GetAllowActivationAsync(Elsa.Workflows.Contracts.WorkflowInstantiationStrategyContext)">
            <summary>
            Always allow creating a new instance. 
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Break">
            <summary>
            Break out of a loop.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Break.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Break.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Complete">
            <summary>
            Signals the current composite activity to complete itself as a whole.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Collections.Generic.ICollection{System.String}},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.#ctor(Elsa.Workflows.Models.Input{System.Object},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Complete.Outcomes">
            <summary>
            The outcome or set of outcomes to complete this activity with.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Complete.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Composite">
            <summary>
            Represents a composite activity that has a single <see cref="P:Elsa.Workflows.Activities.Composite.Root"/> activity. Like a workflow, but without workflow-level properties.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Composite.Variables">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Composite.ResultVariable">
            <summary>
            A variable to allow activities to set a result.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Composite.Root">
            <summary>
            The activity to schedule when this activity executes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.ConfigureActivities(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Override this method to configure activity properties before execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.CompleteAsync(Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Completes this composite activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.CompleteAsync(Elsa.Workflows.ActivityExecutionContext,System.String[])">
            <summary>
            Completes this composite activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.OnCompletedAsync(Elsa.Workflows.ActivityCompletedContext)">
            <summary>
            Override this method to execute custom logic when the composite activity completes.
            </summary>
            <param name="context">The context of the composite activity.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.OnCompleted(Elsa.Workflows.ActivityCompletedContext)">
            <summary>
            Override this method to execute custom logic when the composite activity completes.
            </summary>
            <param name="context">The context of the composite activity.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline(System.Func{System.Threading.Tasks.ValueTask},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline(System.Action{Elsa.Workflows.ActivityExecutionContext},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline(System.Action,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline``1(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask{``0}},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline``1(System.Func{System.Threading.Tasks.ValueTask{``0}},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline``1(System.Func{Elsa.Workflows.ActivityExecutionContext,``0},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.Inline``1(System.Func{``0},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.SetVariable``1(Elsa.Workflows.Memory.Variable{``0},``0,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.SetVariable"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.SetVariable``1(Elsa.Workflows.Memory.Variable{``0},System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,``0},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.SetVariable"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.SetVariable``1(Elsa.Workflows.Memory.Variable{``0},System.Func{``0},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.SetVariable"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite.SetVariable``1(Elsa.Workflows.Memory.Variable{``0},Elsa.Workflows.Memory.Variable{``0},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.SetVariable"/> activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.CompositeWithResult">
            <summary>
            Base class for custom activities with auto-complete behavior that return a result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.CompositeWithResult.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.CompositeWithResult.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.CompositeWithResult.#ctor(Elsa.Workflows.Models.Output,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.CompositeWithResult.Result">
            <summary>
            The result value of the composite.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Composite`1">
            <summary>
            Represents a composite activity that has a single <see cref="P:Elsa.Workflows.Activities.Composite.Root"/> activity and returns a result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Composite`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Composite`1.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Container">
            <summary>
            A base class for activities that control a collection of activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Container.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Container.Activities">
            <summary>
            The <see cref="T:Elsa.Workflows.Contracts.IActivity"/>s to execute.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Container.Variables">
            <summary>
            The variables available to this scope.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Container.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Container.ScheduleChildrenAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Schedule the <see cref="P:Elsa.Workflows.Activities.Container.Activities"/> for execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Container.ScheduleChildren(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Schedule the <see cref="P:Elsa.Workflows.Activities.Container.Activities"/> for execution.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Correlate">
            <summary>
            Set the CorrelationId of the workflow to a given value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Correlate.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Correlate.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Correlate.#ctor(Elsa.Workflows.Memory.Variable{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Correlate.CorrelationId">
            <summary>
            The correlation ID to set.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Correlate.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.DynamicActivity">
            <summary>
            A dynamically provided activity with custom properties. This is experimental and may be removed.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.End">
            <summary>
            Marks the end of a flowchart, causing the flowchart to complete.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.End.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Fault">
            <summary>
            Faults the workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Fault.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Fault.Create(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a fault activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Fault.Code">
            <summary>
            Code to categorize the fault.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Fault.Category">
            <summary>
            Category to categorize the fault. Examples: HTTP, Alteration, Azure, etc.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Fault.FaultType">
            <summary>
            The type of fault. Examples: System, Business, Integration, etc.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Fault.Message">
            <summary>
            The message to include with the fault.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Fault.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Finish">
            <summary>
            Mark the workflow as finished.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Finish.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Finish.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart">
            <summary>
            A flowchart consists of a collection of activities and connections between them.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart.Start">
            <summary>
            The activity to execute when the flowchart starts.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart.Connections">
            <summary>
            A list of connections between activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart.ScheduleChildrenAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart.HasPendingWork(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Checks if there is any pending work for the flowchart.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision">
            <summary>
            Performs a boolean condition and returns an outcome based on the the result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Threading.Tasks.ValueTask{System.Boolean}},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision.Condition">
            <summary>
            The condition to evaluate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowDecision.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowFork">
            <summary>
            Branch execution into multiple branches that will be executed in parallel.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowFork.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowFork.Branches">
            <summary>
            A list of expected outcomes to handle.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowFork.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowJoin">
            <summary>
            Merge multiple branches into a single branch of execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowJoin.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowJoin.Mode">
            <summary>
            The join mode determines whether this activity should continue as soon as one inbound path comes in (Wait Any), or once all inbound paths have executed (Wait All).
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowJoin.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowNode">
            <summary>
            A simple container that executes the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowNode.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowNode.Body">
            <summary>
            The activity to execute.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowNode.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch">
            <summary>
            Evaluates the specified case conditions and schedules the one that evaluates to <code>true</code>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch.Cases">
            <summary>
            The possible cases to evaluate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch.Mode">
            <summary>
            The switch mode determines whether the first match should be scheduled, or all matches.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Attributes.FlowNodeAttribute">
            <summary>
            Defines the outcomes of a flow node.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Attributes.FlowNodeAttribute.#ctor(System.String[])">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Attributes.FlowNodeAttribute.Outcomes">
            <summary>
            The outcomes of the flow node.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Contracts.IJoinNode">
            <summary>
            Gives implementing activities a chance to customize certain flowchart execution behaviors.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.Descendants(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all connections that are descendants of the specified parent activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.Ancestors(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all ancestor connections of the specified parent activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.InboundConnections(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all inbound connections of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.LeftInboundConnections(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all "left" inbound connections of the specified activity. "Left" means "not a descendant of the activity".
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.LeftAncestorConnections(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all "left" ancestor connections of the specified activity. "Left" means "not a descendant of the activity".
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.InboundActivities(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all inbound activities of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.LeftInboundActivities(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all "left" inbound activities of the specified activity. "Left" means "not a descendant of the activity".
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Extensions.ConnectionsExtensions.LeftAncestorActivities(System.Collections.Generic.ICollection{Elsa.Workflows.Activities.Flowchart.Models.Connection},Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns all "left" ancestor activities of the specified activity. "Left" means "not a descendant of the activity".
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Models.Connection">
            <summary>
            A connection between a source and a target endpoint.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Connection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Connection"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Connection.#ctor(Elsa.Workflows.Activities.Flowchart.Models.Endpoint,Elsa.Workflows.Activities.Flowchart.Models.Endpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Connection"/> class.
            </summary>
            <param name="source">The source endpoint.</param>
            <param name="target">The target endpoint.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Connection.#ctor(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Connection"/> class.
            </summary>
            <param name="source">The source endpoint.</param>
            <param name="target">The target endpoint.</param>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.Connection.Source">
            <summary>
            The source endpoint.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.Connection.Target">
            <summary>
            The target endpoint.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Models.Endpoint">
            <summary>
            Represents an endpoint of a connection.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Endpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Endpoint"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Endpoint.#ctor(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Endpoint"/> class.
            </summary>
            <param name="activity">The activity that the endpoint is connected to.</param>
            <param name="port">The port that the endpoint is connected to.</param>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.Endpoint.Activity">
            <summary>
            The activity that the endpoint is connected to.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.Endpoint.Port">
            <summary>
            The port that the endpoint is connected to.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.FlowScope.OwnerActivityId">
            <summary>
            The activity from which the scope was created.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.FlowScope.Activities">
            <summary>
            A list of scheduled activity IDs and a flag whether they executed or not.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowScope.ExcludeExecutedActivities(System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IActivity})">
            <summary>
            Return a list excluding any activities that already executed.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase">
            <summary>
            Represents an individual case of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Activities.FlowSwitch"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor(System.String,Elsa.Expressions.Models.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase"/> class.
            </summary>
            <param name="label">The label of the case.</param>
            <param name="condition">The condition of the case.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor(System.String,System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Threading.Tasks.ValueTask{System.Boolean}})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor(System.String,System.Func{System.Threading.Tasks.ValueTask{System.Boolean}})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor(System.String,System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.#ctor(System.String,System.Func{System.Boolean})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.Label">
            <summary>
            Gets or sets the label of the case.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.FlowSwitchCase.Condition">
            <summary>
            Gets or sets the condition of the case.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection">
            <summary>
            A connection between a source and target activity via the source out port to the target in port.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.#ctor(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Contracts.IActivity,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.Source">
            <summary>
            The source activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.Target">
            <summary>
            The target activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.SourcePort">
            <summary>
            The source port.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.TargetPort">
            <summary>
            The target port.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection.Deconstruct(Elsa.Workflows.Contracts.IActivity@,Elsa.Workflows.Contracts.IActivity@,System.String@,System.String@)">
            <summary>
            Deconstructs the connection into its parts.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Models.Outcomes">
            <summary>
            Represents a list of outcomes that can be send when completing an activity. This information is used by <see cref="T:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart"/>.
            </summary>
            <param name="Names">A list of outcome names.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Models.Outcomes.#ctor(System.String[])">
            <summary>
            Represents a list of outcomes that can be send when completing an activity. This information is used by <see cref="T:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart"/>.
            </summary>
            <param name="Names">A list of outcome names.</param>
        </member>
        <member name="P:Elsa.Workflows.Activities.Flowchart.Models.Outcomes.Names">
            <summary>A list of outcome names.</summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionComparer">
            <summary>
            Compares two <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Connection"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionComparer.Equals(Elsa.Workflows.Activities.Flowchart.Models.Connection,Elsa.Workflows.Activities.Flowchart.Models.Connection)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionComparer.GetHashCode(Elsa.Workflows.Activities.Flowchart.Models.Connection)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionJsonConverter">
            <summary>
            Converts <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.Connection"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionJsonConverter.#ctor(System.Collections.Generic.IDictionary{System.String,Elsa.Workflows.Contracts.IActivity})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ConnectionJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Activities.Flowchart.Models.Connection,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartJsonConverter">
            <summary>
            A JSON converter for <see cref="T:Elsa.Workflows.Activities.Flowchart.Activities.Flowchart"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartJsonConverter.#ctor(Elsa.Workflows.Contracts.IIdentityGenerator)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Activities.Flowchart.Activities.Flowchart,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartSerializationOptionConfigurator">
            <summary>
            Add additional <see cref="T:System.Text.Json.Serialization.JsonConverter"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartSerializationOptionConfigurator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartSerializationOptionConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.FlowchartSerializationOptionConfigurator.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Flowchart.Serialization.ObsoleteConnectionJsonConverter">
            <summary>
            Converts <see cref="T:Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection"/> to and from JSON.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ObsoleteConnectionJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ObsoleteConnectionJsonConverter.#ctor(System.Collections.Generic.IDictionary{System.String,Elsa.Workflows.Contracts.IActivity})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ObsoleteConnectionJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Flowchart.Serialization.ObsoleteConnectionJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Activities.Flowchart.Models.ObsoleteConnection,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.For">
            <summary>
            Iterate over a sequence of steps between a start and an end number.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.For.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.For.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.For.Start">
            <summary>
            The start step.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.For.End">
            <summary>
            The end step.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.For.Step">
            <summary>
            The step size. To count down, enter a negative number.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.For.OuterBoundInclusive">
            <summary>
            Controls whether the end step is upper/lowerbound inclusive or exclusive. True (inclusive) by default.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.For.Body">
            <summary>
            The activity to execute for each iteration.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.For.CurrentValue">
            <summary>
            Stores the current value for each iteration. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.For.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.ForEach">
            <summary>
            Iterate over a set of values.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.ForEach`1">
            <summary>
            A strongly-typed for-each construct where <see cref="!:T"/> is the item type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Collections.Generic.ICollection{`0}},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.#ctor(System.Func{System.Collections.Generic.ICollection{`0}},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.#ctor(System.Collections.Generic.ICollection{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.#ctor(Elsa.Workflows.Models.Input{System.Collections.Generic.ICollection{`0}},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.ForEach`1.Items">
            <summary>
            The set of values to iterate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.ForEach`1.Body">
            <summary>
            The activity to execute for each iteration.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.ForEach`1.CurrentValue">
            <summary>
            The current value being iterated will be assigned to the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.ForEach`1.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Fork">
            <summary>
            Branch execution into multiple branches.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Fork.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Fork.JoinMode">
            <summary>
            Controls when this activity yields control back to its parent activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Fork.Branches">
            <summary>
            The branches to schedule.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Fork.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.If">
            <summary>
            Evaluate a Boolean condition to determine which activity to execute next.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.If.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.If.#ctor(Elsa.Workflows.Models.Input{System.Boolean},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.If.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.If.#ctor(System.Func{System.Boolean},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.If.Condition">
            <summary>
            The condition to evaluate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.If.Then">
            <summary>
            The activity to execute when the condition evaluates to true.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.If.Else">
            <summary>
            The activity to execute when the condition evaluates to false.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.If.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Inline">
            <summary>
            Represents an inline code activity that can be used to execute arbitrary .NET code from a workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.#ctor(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.#ctor(System.Func{System.Threading.Tasks.ValueTask},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.#ctor(System.Action{Elsa.Workflows.ActivityExecutionContext},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.#ctor(System.Action,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From(System.Func{System.Threading.Tasks.ValueTask})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From(System.Action{Elsa.Workflows.ActivityExecutionContext})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From(System.Action)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From``1(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask{``0}})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From``1(System.Func{System.Threading.Tasks.ValueTask{``0}})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From``1(System.Func{Elsa.Workflows.ActivityExecutionContext,``0})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline.From``1(System.Func{``0})">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Inline"/> activity from the specified delegate.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.Inline`1">
            <summary>
            Represents an inline code activity that can be used to execute arbitrary .NET code from a workflow and return a value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline`1.#ctor(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Threading.Tasks.ValueTask{`0}},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline`1.#ctor(System.Func{System.Threading.Tasks.ValueTask{`0}},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline`1.#ctor(System.Func{Elsa.Workflows.ActivityExecutionContext,`0},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline`1.#ctor(System.Func{`0},Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Inline`1.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.NotFoundActivity">
            <summary>
            This activity is instantiated in case a workflow references an activity type that could not be found.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.NotFoundActivity.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.NotFoundActivity.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.NotFoundActivity.MissingTypeName">
            <summary>
            The type name of the missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.NotFoundActivity.MissingTypeVersion">
            <summary>
            The version of the missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.NotFoundActivity.OriginalActivityJson">
            <summary>
            The original activity JSON.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.NotFoundActivity.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Parallel">
            <summary>
            Execute a set of activities in parallel.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Parallel.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Parallel.#ctor(Elsa.Workflows.Contracts.IActivity[])">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Parallel.ScheduleChildrenAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.ParallelForEach">
            <summary>
            Schedule an activity for each item in parallel.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.ParallelForEach.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.ParallelForEach`1">
            <summary>
            Schedule an activity for each item in parallel.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Elsa.Workflows.Activities.ParallelForEach`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.ParallelForEach`1.Items">
            <summary>
            The items to iterate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.ParallelForEach`1.Body">
            <summary>
            The <see cref="T:Elsa.Workflows.Contracts.IActivity"/> to execute each iteration.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.ParallelForEach`1.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.ReadLine">
            <summary>
            Read a line of text from the console.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.ReadLine.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ReadLine.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ReadLine.#ctor(Elsa.Workflows.Models.Output{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.ReadLine.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Sequence">
            <summary>
            Execute a set of activities in sequence.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Sequence.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Sequence.ScheduleChildrenAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.SetName">
            <summary>
            Sets a property on the workflow execution context with the specified name value.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Activities.SetName.WorkflowInstanceNameKey">
            <summary>
            The property key name used to store the workflow instance name.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetName.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetName.#ctor(Elsa.Workflows.Models.Input{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.SetName.Value">
            <summary>
            The value to set the workflow instance's name to.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetName.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.SetVariable`1">
            <summary>
            Assign a workflow variable a value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(Elsa.Workflows.Memory.Variable{`0},Elsa.Workflows.Models.Input{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(Elsa.Workflows.Memory.Variable{`0},Elsa.Workflows.Memory.Variable{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(Elsa.Workflows.Memory.Variable{`0},System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(Elsa.Workflows.Memory.Variable{`0},System.Func{`0},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.#ctor(Elsa.Workflows.Memory.Variable{`0},`0,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.SetVariable`1.Variable">
            <summary>
            The variable to assign the value to.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.SetVariable`1.Value">
            <summary>
            The value to assign.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable`1.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.SetVariable">
            <summary>
            Assign a workflow variable a value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.SetVariable.Variable">
            <summary>
            The variable to assign the value to.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.SetVariable.Value">
            <summary>
            The value to assign.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SetVariable.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Start">
            <summary>
            Marks the start of a flowchart.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Start.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Switch">
            <summary>
            The Switch activity is an approximation of the `switch` construct in C#.
            When a case evaluates to true, the associated activity is then scheduled for execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Switch.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.Switch.Output">
            <summary>
            The value to switch on, made available as output for capturing.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Switch.Cases">
            <summary>
            The cases to evaluate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Switch.Mode">
            <summary>
            The switch mode determines whether the first match should be scheduled, or all matches.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Switch.Default">
            <summary>
            The default activity to schedule when no case matches.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Switch.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.SwitchCase">
            <summary>
            Represents an individual case of the <see cref="T:Elsa.Workflows.Activities.Switch"/> activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.SwitchCase"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor(System.String,Elsa.Expressions.Models.Expression,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.SwitchCase"/> class.
            </summary>
            <param name="label">The label of the case.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="activity">The activity to schedule when the condition evaluates to true.</param>
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor(System.String,System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Threading.Tasks.ValueTask{System.Boolean}},Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor(System.String,System.Func{System.Threading.Tasks.ValueTask{System.Boolean}},Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor(System.String,System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean},Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.SwitchCase.#ctor(System.String,System.Func{System.Boolean},Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.SwitchCase.Label">
            <summary>
            The label of the case.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.SwitchCase.Condition">
            <summary>
            The condition to evaluate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.SwitchCase.Activity">
            <summary>
            The activity to schedule when the condition evaluates to true.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.While">
            <summary>
            Execute an activity while a given condition evaluates to true.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.While.True(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Creates a <see cref="T:Elsa.Workflows.Activities.While"/> activity that loops forever.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(Elsa.Workflows.Models.Input{System.Boolean},Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Threading.Tasks.ValueTask{System.Boolean}},Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean},Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(System.Func{System.Threading.Tasks.ValueTask{System.Boolean}},Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.While.#ctor(System.Func{System.Boolean},Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.While.Condition">
            <summary>
            The condition to evaluate.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.While.Body">
            <summary>
            The <see cref="T:Elsa.Workflows.Contracts.IActivity"/> to execute on every iteration.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.While.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Activities.Workflow">
            <summary>
            Represents an executable process.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.#ctor(Elsa.Workflows.Models.WorkflowIdentity,Elsa.Workflows.Models.WorkflowPublication,Elsa.Workflows.Models.WorkflowMetadata,Elsa.Workflows.Models.WorkflowOptions,Elsa.Workflows.Contracts.IActivity,System.Collections.Generic.ICollection{Elsa.Workflows.Memory.Variable},System.Collections.Generic.ICollection{Elsa.Workflows.Models.InputDefinition},System.Collections.Generic.ICollection{Elsa.Workflows.Models.OutputDefinition},System.Collections.Generic.ICollection{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Workflow"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Workflow"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Activities.Workflow"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Identity">
            <summary>
            Gets or sets the workflow identity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Publication">
            <summary>
            Gets or sets the publication status of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Inputs">
            <summary>
            Gets or sets input definitions.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Outputs">
            <summary>
            Gets or sets output definitions.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Outcomes">
            <summary>
            Gets or sets possible outcomes for this workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.WorkflowMetadata">
            <summary>
            Gets or sets metadata about the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.Options">
            <summary>
            Gets or sets options for the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.IsReadonly">
            <summary>
            Make workflow definition readonly.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Activities.Workflow.IsSystem">
            <summary>
            Gets or sets a value indicating whether the workflow is a system workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.FromActivity(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Constructs a new <see cref="T:Elsa.Workflows.Activities.Workflow"/> from the specified <see cref="T:Elsa.Workflows.Contracts.IActivity"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.CreateRegister">
            <summary>
            Creates a new memory register initialized with this workflow's variables.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.Workflow.Clone">
            <summary>
            Create a shallow copy of this workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Activities.WriteLine">
            <summary>
             Write a line of text to the console.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(System.Func{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(Elsa.Workflows.Memory.Variable{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(Elsa.Expressions.Models.Literal{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(Elsa.Expressions.Models.Expression,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.#ctor(Elsa.Workflows.Models.Input{System.String},System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Activities.WriteLine.Text">
            <summary>
            The text to write.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Activities.WriteLine.Execute(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Attributes.ExcludeFromHashAttribute">
            <summary>
            Indicates that a property should be excluded from the hash computation.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Attributes.InputAttribute">
            <summary>
            Specifies various metadata about an activity's input property.
            This metadata can be used by visual designers to control various aspects of the input editor control.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.Name">
            <summary>
            The technical name to use for the input property.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.UIHint">
            <summary>
            A hint to workflow tooling what input control to use. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.DisplayName">
            <summary>
            The user-friendly name of the activity property.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.Category">
            <summary>
            A category to group this property with.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.Options">
            <summary>
            A value representing options specific to a given UI hint.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.Order">
            <summary>
            A value to order this property by. Properties are displayed in ascending order (lower appears before higher).
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.DefaultValue">
            <summary>
            The default value to set.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.DefaultValueProvider">
            <summary>
            A type that implements <see cref="T:Elsa.Workflows.Contracts.IActivityPropertyDefaultValueProvider"/> and provides a default value. When specified, the <see cref="P:Elsa.Workflows.Attributes.InputAttribute.DefaultValue"/> will be ignored.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.DefaultSyntax">
            <summary>
            The syntax to use by default when evaluating the value. Only used when the property definition doesn't have a syntax specified. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.SupportedSyntaxes">
            <summary>
            The syntax to use by default when evaluating the value. Only used when the property definition doesn't have a syntax specified. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.IsReadOnly">
            <summary>
            A value indicating whether this property should be displayed as read-only.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.IsBrowsable">
            <summary>
            A value indicating whether this property should be visible.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.AutoEvaluate">
            <summary>
            True if the activity invoker should evaluate the expression, false otherwise.
            When set to false, it is up to the activity itself to evaluate its input before using it. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.IsSerializable">
            <summary>
            A value indicating whether this input can be serialized as part of the workflow instance,
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.UIHandler">
            <summary>
            A <see cref="T:Elsa.Workflows.Contracts.IPropertyUIHandler"/> type that can be used to customize the UI for this property.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.InputAttribute.UIHandlers">
            <summary>
            A set of <see cref="T:Elsa.Workflows.Contracts.IPropertyUIHandler"/> types that can be used to customize the UI for this property.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Attributes.JsonIgnoreCompositeRootAttribute">
            <summary>
            Used by <see cref="T:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverter"/> to indicate that the property should be expanded into a JSON object.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.OutputAttribute.Name">
            <summary>
            The technical name of the activity property.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.OutputAttribute.DisplayName">
            <summary>
            The user-friendly name of the activity property.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.OutputAttribute.Description">
            <summary>
            A brief description about this property for workflow tooling to use when displaying activity editors.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.OutputAttribute.IsBrowsable">
            <summary>
            A value indicating whether this property should be visible.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Attributes.OutputAttribute.IsSerializable">
            <summary>
            A value indicating whether this output can be serialized as part of the workflow instance,
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Behaviors.AutoCompleteBehavior">
            <summary>
            Automatically completes the currently executing activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Behaviors.AutoCompleteBehavior.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Behaviors.AutoCompleteBehavior.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Behaviors.BreakBehavior">
            <summary>
            Implements a "break" behavior that handles the <see cref="T:Elsa.Workflows.Signals.BreakSignal"/> signal.
            Stops propagation of the signal, which is useful for looping activities such as <see cref="T:Elsa.Workflows.Activities.While"/>, <see cref="T:Elsa.Workflows.Activities.For"/> ans <see cref="T:Elsa.Workflows.Activities.ForEach"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Behaviors.BreakBehavior.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Behaviors.ScheduledChildCallbackBehavior">
            <summary>
            Implements a behavior that invokes "child completed" callbacks on parent activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Behaviors.ScheduledChildCallbackBehavior.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Builders.WorkflowBuilder">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.#ctor(Elsa.Workflows.Contracts.IActivityVisitor,Elsa.Workflows.Contracts.IIdentityGraphService,Elsa.Workflows.Contracts.IActivityRegistry,Elsa.Workflows.Contracts.IIdentityGenerator)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Id">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.DefinitionId">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Version">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Name">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Description">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.IsReadonly">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.IsSystem">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Root">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Variables">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Inputs">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Outputs">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Outcomes">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.Result">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.CustomProperties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Builders.WorkflowBuilder.WorkflowOptions">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithDefinitionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariable``1">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariable``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariable``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariable``1(Elsa.Workflows.Memory.Variable{``0})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariable(Elsa.Workflows.Memory.Variable)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithVariables(Elsa.Workflows.Memory.Variable[])">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithInput``1(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithInput(System.String,System.Type,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithInput(System.String,System.Type,System.Action{Elsa.Workflows.Models.InputDefinition})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithInput(System.Action{Elsa.Workflows.Models.InputDefinition})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithInput(Elsa.Workflows.Models.InputDefinition)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithCustomProperty(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.WithActivationStrategyType``1">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.AsReadonly">
            <summary>
            Marks the workflow as readonly.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.AsSystemWorkflow">
            <summary>
              Marks the workflow as a system workflow.
              System workflows are not visible in the UI by default and are not meant to be modified by users.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.BuildWorkflowAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilder.BuildWorkflowAsync(Elsa.Workflows.Contracts.IWorkflow,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Builders.WorkflowBuilderFactory">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilderFactory.#ctor(System.Func{Elsa.Workflows.Contracts.IWorkflowBuilder})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Builders.WorkflowBuilderFactory"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Builders.WorkflowBuilderFactory.CreateBuilder">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.ActivityCompletedContext">
            <summary>
            Provides context information when an activity has completed.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityCompletedContext.#ctor(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Provides context information when an activity has completed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletedContext.WorkflowExecutionContext">
            <summary>
            Gets the workflow execution context.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityCompletedContext.GetRequiredService``1">
            <summary>
            Resolves a required service using the service provider.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The resolved service.</returns>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletedContext.CancellationToken">
            <summary>
            A cancellation token to use when invoking asynchronous operations.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityCompletedContext.CompleteActivityAsync(System.Object)">
            <summary>
            Complete the current activity. This should only be called by activities that explicitly suppress automatic-completion.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityCompletedContext.CompleteActivityWithOutcomesAsync(System.String[])">
            <summary>
            Complete the current activity with the specified outcomes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.ActivityExecutionContext">
            <summary>
            Represents the context of an activity execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CompleteActivityAsync(System.Object)">
            <summary>
            Complete the current activity. This should only be called by activities that explicitly suppress automatic-completion.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CompleteActivityWithOutcomesAsync(System.String[])">
            <summary>
            Complete the current activity with the specified outcomes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CompleteCompositeAsync(System.String[])">
            <summary>
            Complete the current composite activity with the specified outcome.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.#ctor(System.String,Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.ActivityExecutionContext,Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Models.ActivityDescriptor,System.DateTimeOffset,System.Object,Elsa.Common.Contracts.ISystemClock,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Id">
            <summary>
            The ID of the current activity execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.StartedAt">
            <summary>
            The time at which the activity execution context was created.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Tag">
            <summary>
            An optional tag to associate with the activity execution.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.CompletedAt">
            <summary>
            The time at which the activity execution context was completed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.IsCompleted">
            <summary>
            Returns true if the activity execution context has completed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.WorkflowExecutionContext">
            <summary>
            The workflow execution context. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ParentActivityExecutionContext">
            <summary>
            The parent activity execution context, if any. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ExpressionExecutionContext">
            <summary>
            The expression execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Variables">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.DynamicVariables">
            <summary>
            A list of variables that are dynamically added to the activity execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Activity">
            <summary>
            The currently executing activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ActivityDescriptor">
            <summary>
            The activity descriptor.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.CancellationToken">
            <summary>
            A cancellation token to use when invoking asynchronous operations.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Status">
            <summary>
            The current status of the activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.TransitionTo(Elsa.Workflows.ActivityStatus)">
            <summary>
            Sets the current status of the activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Exception">
            <summary>
            Gets or sets the exception that occurred during the activity execution, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Properties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.TransientProperties">
            <summary>
            A transient dictionary of values that can be associated with this activity execution context.
            These properties only exist while the activity executes and are not persisted. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ActivityNode">
            <summary>
            Returns the <see cref="P:Elsa.Workflows.ActivityExecutionContext.ActivityNode"/> metadata about the current activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.NodeId">
            <summary>
            Returns the global node ID for the current activity within the graph.
            </summary>
            <remarks>As of tool version 3.0, all activity Ids are already unique, so there's no need to construct a hierarchical ID</remarks>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.Bookmarks">
            <summary>
            A list of bookmarks created by the current activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ExecutionCount">
            <summary>
            The number of times this <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> has executed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.WorkflowInput">
            <summary>
            A dictionary of received inputs for the current workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ActivityInput">
            <summary>
            A dictionary of inputs for the current activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.JournalData">
            <summary>
            Journal data will be added to the workflow execution log for the "Executed" event.  
            </summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityExecutionContext.ActivityState">
            <summary>
            Stores the evaluated inputs, serialized, for the current activity for historical purposes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivityAsync(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Services.ActivityCompletionCallback,System.Object,System.Collections.Generic.IEnumerable{Elsa.Workflows.Memory.Variable})">
            <summary>
            Schedules the specified activity to be executed.
            </summary>
            <param name="activity">The activity to schedule.</param>
            <param name="completionCallback">An optional callback to invoke when the activity completes.</param>
            <param name="tag">An optional tag to associate with the activity execution.</param>
            <param name="variables">An optional list of variables to declare with the activity execution.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivityAsync(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Options.ScheduleWorkOptions)">
            <summary>
            Schedules the specified activity to be executed.
            </summary>
            <param name="activity">The activity to schedule.</param>
            <param name="options">The options used to schedule the activity.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivityAsync(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Options.ScheduleWorkOptions)">
            <summary>
            Schedules the specified activity to be executed.
            </summary>
            <param name="activity">The activity to schedule.</param>
            <param name="owner">The activity execution context that owns the scheduled activity.</param>
            <param name="options">The options used to schedule the activity.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivityAsync(Elsa.Workflows.Models.ActivityNode,Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Options.ScheduleWorkOptions)">
            <summary>
            Schedules the specified activity to be executed.
            </summary>
            <param name="activityNode">The activity node to schedule.</param>
            <param name="owner">The activity execution context that owns the scheduled activity.</param>
            <param name="options">The options used to schedule the activity.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivitiesAsync(Elsa.Workflows.Contracts.IActivity[])">
            <summary>
            Schedules the specified activities to be executed.
            </summary>
            <param name="activities">The activities to schedule.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivities(System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IActivity},Elsa.Workflows.Services.ActivityCompletionCallback,System.Object,System.Collections.Generic.IEnumerable{Elsa.Workflows.Memory.Variable})">
            <summary>
            Schedules the specified activities to be executed.
            </summary>
            <param name="activities">The activities to schedule.</param>
            <param name="completionCallback">The callback to invoke when the activities complete.</param>
            <param name="tag">An optional tag to associate with the activity execution.</param>
            <param name="variables">An optional list of variables to declare with the activity execution.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ScheduleActivities(System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IActivity},Elsa.Workflows.Options.ScheduleWorkOptions)">
            <summary>
            Schedules the specified activities to be executed.
            </summary>
            <param name="activities">The activities to schedule.</param>
            <param name="options">The options used to schedule the activities.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmarks(System.Collections.Generic.IEnumerable{System.Object},Elsa.Workflows.Services.ExecuteActivityDelegate,System.Boolean)">
            <summary>
            Creates a bookmark for each payload.
            </summary>
            <param name="payloads">The payloads to create bookmarks for.</param>
            <param name="callback">An optional callback that is invoked when the bookmark is resumed.</param>
            <param name="includeActivityInstanceId">Whether or not the activity instance ID should be included in the bookmark payload.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.AddBookmarks(System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.Bookmark})">
            <summary>
            Adds each bookmark to the list of bookmarks.
            </summary>
            <param name="bookmarks">The bookmarks to add.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.AddBookmark(Elsa.Workflows.Models.Bookmark)">
            <summary>
            Adds a bookmark to the list of bookmarks.
            </summary>
            <param name="bookmark">The bookmark to add.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmark(Elsa.Workflows.Services.ExecuteActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a bookmark so that this activity can be resumed at a later time.
            </summary>
            <param name="callback">An optional callback that is invoked when the bookmark is resumed.</param>
            <param name="metadata">Custom properties to associate with the bookmark.</param>
            <returns>The created bookmark.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmark(System.Object,Elsa.Workflows.Services.ExecuteActivityDelegate,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a bookmark so that this activity can be resumed at a later time.
            </summary>
            <param name="payload">The payload to associate with the bookmark.</param>
            <param name="callback">An optional callback that is invoked when the bookmark is resumed.</param>
            <param name="includeActivityInstanceId">Whether or not the activity instance ID should be included in the bookmark payload.</param>
            <param name="customProperties">Custom properties to associate with the bookmark.</param>
            <returns>The created bookmark.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmark(System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a bookmark for the current activity execution context.
            </summary>
            <param name="payload">The payload to associate with the bookmark.</param>
            <param name="includeActivityInstanceId">Specifies whether to include the activity instance ID in the bookmark information. Defaults to true.</param>
            <param name="customProperties">Additional custom properties to associate with the bookmark. Defaults to null.</param>
            <returns>The created bookmark.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmark(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a bookmark so that this activity can be resumed at a later time. 
            </summary>
            <param name="payload">The payload to associate with the bookmark.</param>
            <param name="metadata">Custom properties to associate with the bookmark.</param>
            <returns>The created bookmark.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.CreateBookmark(Elsa.Workflows.Models.CreateBookmarkArgs)">
            <summary>
            Creates a bookmark so that this activity can be resumed at a later time.
            Creating a bookmark will automatically suspend the workflow after all pending activities have executed.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ClearBookmarks">
            <summary>
            Clear all bookmarks.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetProperty``1(System.String)">
            <summary>
            Returns a property value associated with the current activity context. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetProperty``1(System.String,System.Func{``0})">
            <summary>
            Returns a property value associated with the current activity context. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.SetProperty``1(System.String,``0)">
            <summary>
            Stores a property associated with the current activity context. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.UpdateProperty``1(System.String,System.Func{``0,``0})">
            <summary>
            Updates a property associated with the current activity context. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.RemoveProperty(System.String)">
            <summary>
            Removes a property associated with the current activity context.
            </summary>
            <param name="key">The property key.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetRequiredService``1">
            <summary>
            Resolves a required service using the service provider.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetRequiredService(System.Type)">
            <summary>
            Resolves a required service using the service provider.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetOrCreateService``1">
            <summary>
            Resolves a service using the service provider. If not found, a new instance is created.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetOrCreateService(System.Type)">
            <summary>
            Resolves a service using the service provider. If not found, a new instance is created.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetService``1">
            <summary>
            Resolves a service using the service provider.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetServices``1">
            <summary>
            Resolves all services of the specified type using the service provider.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>The resolved services.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.GetService(System.Type)">
            <summary>
            Resolves a service using the service provider.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>The resolved service.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Get``1(Elsa.Workflows.Models.Input{``0})">
            <summary>
            Gets the value of the specified input.
            </summary>
            <param name="input">The input.</param>
            <typeparam name="T">The type of the input.</typeparam>
            <returns>The input value.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Get``1(Elsa.Workflows.Models.Output{``0})">
            <summary>
            Gets the value of the specified output.
            </summary>
            <param name="output">The output.</param>
            <typeparam name="T">The type of the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Get(Elsa.Workflows.Models.Output)">
            <summary>
            Gets the value of the specified output.
            </summary>
            <param name="output">The output.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Get(Elsa.Expressions.Models.MemoryBlockReference)">
            <summary>
            Gets the value of the specified memory block.
            </summary>
            <param name="blockReference">The memory block reference.</param>
            <returns>The memory block value.</returns>
            <exception cref="T:System.InvalidOperationException">The memory block does not exist.</exception>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Get``1(Elsa.Expressions.Models.MemoryBlockReference)">
            <summary>
            Gets the value of the specified memory block.
            </summary>
            <param name="blockReference">The memory block reference.</param>
            <typeparam name="T">The type of the memory block.</typeparam>
            <returns>The memory block value.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.TryGet(Elsa.Expressions.Models.MemoryBlockReference,System.Object@)">
            <summary>
            Tries to get the value of the specified memory block.
            </summary>
            <param name="blockReference">The memory block reference.</param>
            <param name="value">The memory block value.</param>
            <returns>True if the memory block exists, false otherwise.</returns>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Set(Elsa.Expressions.Models.MemoryBlockReference,System.Object,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Sets a value at the specified memory block.
            </summary>
            <param name="blockReference">The memory block reference.</param>
            <param name="value">The value to set.</param>
            <param name="configure">An optional callback that can be used to configure the memory block.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Set``1(Elsa.Workflows.Models.Output{``0},``0,System.String)">
            <summary>
            Sets a value at the specified output.
            </summary>
            <param name="output">The output.</param>
            <param name="value">The value to set.</param>
            <param name="outputName">The name of the output.</param>
            <typeparam name="T">The type of the output.</typeparam>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.Set(Elsa.Workflows.Models.Output,System.Object,System.String)">
            <summary>
            Sets a value at the specified output.
            </summary>
            <param name="output">The output.</param>
            <param name="value">The value to set.</param>
            <param name="outputName">The name of the output.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.ClearCompletionCallbacks">
            <summary>
            Removes all completion callbacks for the current activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ActivityExecutionContext.AddExecutionLogEntry(System.String,System.String,System.String,System.Object)">
            <summary>
            Adds a new <see cref="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry"/> to the execution log of the current <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="message">The message of the event.</param>
            <param name="source">The source of the activity. For example, the source file name and line number in case of composite activities.</param>
            <param name="payload">Any contextual data related to this event.</param>
            <returns>Returns the created <see cref="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry"/>.</returns>
        </member>
        <member name="T:Elsa.Workflows.SignalContext">
            <summary>
            Provides contextual information about a signal.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.SignalContext.#ctor(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.ActivityExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.SignalContext"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.SignalContext.ReceiverActivityExecutionContext">
            <summary>
            The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> receiving the signal.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.SignalContext.SenderActivityExecutionContext">
            <summary>
            The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> sending the signal.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.SignalContext.IsSelf">
            <summary>
            Returns true if the receiver is the same as the sender.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.SignalContext.CancellationToken">
            <summary>
            The cancellation token.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.SignalContext.StopPropagation">
            <summary>
            Stops the signal from propagating further up the activity execution context hierarchy.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.StorageDriverContext">
            <summary>
            Provides context for storage drivers.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.StorageDriverContext.#ctor(Elsa.Workflows.Contracts.IExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Provides context for storage drivers.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.WorkflowExecutionContext">
            <summary>
            Provides context to the currently executing workflow.
            </summary>
            <summary>
            Provides context to the currently executing workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.Cancel">
            <summary>
            Cancels the workflow and all it's children.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.#ctor(System.IServiceProvider,Elsa.Workflows.Models.WorkflowGraph,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Elsa.Workflows.Services.ExecuteActivityDelegate,System.String,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityIncident},System.DateTimeOffset,System.Action{Elsa.Workflows.WorkflowExecutionContext},Elsa.Workflows.Models.CancellationTokens)">
            <summary>
            Initializes a new instance of <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.CreateAsync(System.IServiceProvider,Elsa.Workflows.Models.WorkflowGraph,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Elsa.Workflows.Services.ExecuteActivityDelegate,System.String,System.Action{Elsa.Workflows.WorkflowExecutionContext},Elsa.Workflows.Models.CancellationTokens)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> for the specified workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.CreateAsync(System.IServiceProvider,Elsa.Workflows.Models.WorkflowGraph,Elsa.Workflows.State.WorkflowState,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Elsa.Workflows.Services.ExecuteActivityDelegate,System.String,System.Action{Elsa.Workflows.WorkflowExecutionContext},Elsa.Workflows.Models.CancellationTokens)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> for the specified workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.CreateAsync(System.IServiceProvider,Elsa.Workflows.Models.WorkflowGraph,System.String,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityIncident},System.DateTimeOffset,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Elsa.Workflows.Services.ExecuteActivityDelegate,System.String,System.Action{Elsa.Workflows.WorkflowExecutionContext},Elsa.Workflows.Models.CancellationTokens)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> for the specified workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.SetWorkflowGraphAsync(Elsa.Workflows.Models.WorkflowGraph)">
            <summary>
            Assigns the specified workflow to this workflow execution context.
            </summary>
            <param name="workflowGraph">The workflow graph to assign.</param>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ServiceProvider">
            <summary>
            Gets the <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ActivityRegistry">
            <summary>
            Gets the <see cref="T:Elsa.Workflows.Contracts.IActivityRegistry"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.WorkflowGraph">
            <summary>
            Gets the workflow graph.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Workflow">
            <summary>
            The <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Workflow"/> associated with the execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Graph">
            <summary>
            A graph of the workflow structure.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Status">
            <summary>
            The current status of the workflow. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.SubStatus">
            <summary>
            The current sub status of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.MemoryRegister">
            <summary>
            The root <see cref="P:Elsa.Workflows.WorkflowExecutionContext.MemoryRegister"/> associated with the execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Id">
            <summary>
            A unique ID of the execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Activity">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.CorrelationId">
            <summary>
            An application-specific identifier associated with the execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ParentWorkflowInstanceId">
            <summary>
            The ID of the workflow instance that triggered this instance.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.CreatedAt">
            <summary>
            The date and time the workflow execution context was created.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.UpdatedAt">
            <summary>
            The date and time the workflow execution context was last updated.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.FinishedAt">
            <summary>
            The date and time the workflow execution context has finished.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.SystemClock">
            <summary>
            Gets the clock used to determine the current time.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Nodes">
            <summary>
            A flattened list of <see cref="T:Elsa.Workflows.Models.ActivityNode"/>s from the <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Graph"/>. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.NodeIdLookup">
            <summary>
            A map between activity IDs and <see cref="T:Elsa.Workflows.Models.ActivityNode"/>s in the workflow graph.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.NodeHashLookup">
            <summary>
            A map between hashed activity node IDs and <see cref="T:Elsa.Workflows.Models.ActivityNode"/>s in the workflow graph.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.NodeActivityLookup">
            <summary>
            A map between <see cref="T:Elsa.Workflows.Contracts.IActivity"/>s and <see cref="T:Elsa.Workflows.Models.ActivityNode"/>s in the workflow graph.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Scheduler">
            <summary>
            The <see cref="T:Elsa.Workflows.Contracts.IActivityScheduler"/> for the execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.IdentityGenerator">
            <summary>
            Gets the <see cref="T:Elsa.Workflows.Contracts.IIdentityGenerator"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Bookmarks">
            <summary>
            A collection of collected bookmarks during workflow execution. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Input">
            <summary>
            A dictionary of inputs provided at the start of the current workflow execution. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Output">
            <summary>
            A dictionary of outputs provided by the current workflow execution. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Properties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.TransientProperties">
            <summary>
            A dictionary that can be used by application code and middleware to store information and even services. Values do not need to be serializable.
            All data will be gone once workflow execution completes. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Incidents">
            <summary>
            A collection of incidents that may have occurred during execution.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ExecuteDelegate">
            <summary>
            The current <see cref="T:Elsa.Workflows.Services.ExecuteActivityDelegate"/> delegate to invoke when executing the next activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ResumedBookmarkContext">
            <summary>
            Provides context about the bookmark that was used to resume workflow execution, if any. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.TriggerActivityId">
            <summary>
            The ID of the activity associated with the trigger that caused this workflow execution, if any. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.CancellationTokens">
            <summary>
            A set of cancellation tokens that can be used to cancel the workflow execution without cancelling system-level operations.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.CompletionCallbacks">
            <summary>
            A list of <see cref="T:Elsa.Workflows.ActivityCompletionCallbackEntry"/> callbacks that are invoked when the associated child activity completes.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ActivityExecutionContexts">
            <summary>
            A list of <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>s that are currently active.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ExecutionLogSequence">
            <summary>
            The last execution log sequence number. This number is incremented every time a new entry is added to the execution log and is persisted alongside the workflow instance and restored when the workflow is resumed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ExecutionLog">
            <summary>
            A collection of execution log entries. This collection is flushed when the workflow execution context ends.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.ExpressionExecutionContext">
            <summary>
            The expression execution context for the current workflow execution.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.WorkflowExecutionContext.Variables">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetRequiredService``1">
            <summary>
            Resolves the specified service type from the service provider.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetRequiredService(System.Type)">
            <summary>
            Resolves the specified service type from the service provider.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetOrCreateService``1">
            <summary>
            Resolves the specified service type from the service provider, or creates a new instance if the service type was not found in the service container.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetOrCreateService(System.Type)">
            <summary>
            Resolves the specified service type from the service provider, or creates a new instance if the service type was not found in the service container.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetService``1">
            <summary>
            Resolves the specified service type from the service provider.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetService(System.Type)">
            <summary>
            Resolves the specified service type from the service provider.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetServices``1">
            <summary>
            Resolves multiple implementations of the specified service type from the service provider.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.AddCompletionCallback(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Models.ActivityNode,Elsa.Workflows.Services.ActivityCompletionCallback,System.Object)">
            <summary>
            Registers a completion callback for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.PopCompletionCallback(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Models.ActivityNode)">
            <summary>
            Unregisters the completion callback for the specified owner and child activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindNodeById(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Models.ActivityNode"/> with the specified activity ID from the workflow graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindNodeByHash(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Models.ActivityNode"/> with the specified hash of the activity node ID from the workflow graph.
            </summary>
            <param name="hash">The hash of the activity node ID.</param>
            <returns>The <see cref="T:Elsa.Workflows.Models.ActivityNode"/> with the specified hash of the activity node ID.</returns>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindNodeByActivity(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Models.ActivityNode"/> containing the specified activity from the workflow graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindNodeByActivityId(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Models.ActivityNode"/> associated with the specified activity ID.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindActivityByNodeId(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Contracts.IActivity"/> with the specified ID from the workflow graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindActivityById(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Contracts.IActivity"/> with the specified ID from the workflow graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.FindActivityByHash(System.String)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Contracts.IActivity"/> with the specified hash of the activity node ID from the workflow graph.
            </summary>
            <param name="hash">The hash of the activity node ID.</param>
            <returns>The <see cref="T:Elsa.Workflows.Contracts.IActivity"/> with the specified hash of the activity node ID.</returns>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetProperty``1(System.String)">
            <summary>
            Returns a custom property with the specified key from the <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Properties"/> dictionary.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.SetProperty``1(System.String,``0)">
            <summary>
            Sets a custom property with the specified key on the <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Properties"/> dictionary.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.UpdateProperty``1(System.String,System.Func{``0,``0})">
            <summary>
            Updates a custom property with the specified key on the <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Properties"/> dictionary.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.HasProperty(System.String)">
            <summary>
            Returns true if the <see cref="P:Elsa.Workflows.WorkflowExecutionContext.Properties"/> dictionary contains the specified key.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.CreateActivityExecutionContext(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Options.ActivityInvocationOptions)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetActivityOutputRegister">
            <summary>
            Returns a register of recorded activity output.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.GetLastActivityResult">
            <summary>
            Returns the last activity result.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.AddActivityExecutionContext(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Adds the specified <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> to the workflow execution context.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.RemoveActivityExecutionContext(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Removes the specified <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> from the workflow execution context.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.RemoveActivityExecutionContext(System.Func{Elsa.Workflows.ActivityExecutionContext,System.Boolean})">
            <summary>
            Removes the specified <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> from the workflow execution context.
            </summary>
            <param name="predicate">The predicate used to filter the activity execution contexts to remove.</param>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.RecordActivityOutput(Elsa.Workflows.ActivityExecutionContext,System.String,System.Object)">
            <summary>
            Records the output of the specified activity into the current workflow execution context. 
            </summary>
            <param name="activityExecutionContext">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> of the activity.</param>
            <param name="outputName">The name of the output.</param>
            <param name="value">The value of the output.</param>
        </member>
        <member name="M:Elsa.Workflows.WorkflowExecutionContext.AddExecutionLogEntry(System.String,System.String,System.Object)">
            <summary>
            Adds a new <see cref="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry"/> to the execution log of the current <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>.
            </summary>
            <param name="eventName">The name of the event.</param>
            <param name="message">The message of the event.</param>
            <param name="payload">Any contextual data related to this event.</param>
            <returns>Returns the created <see cref="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry"/>.</returns>
        </member>
        <member name="T:Elsa.Workflows.ActivityCompletionCallbackEntry">
            <summary>
            A delegate entry that is used by activities to be notified when the activities they scheduled are completed.
            </summary>
            <param name="Owner">The activity scheduling the <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity.</param>
            <param name="Child">The child <see cref="T:Elsa.Workflows.Contracts.IActivity"/> being scheduled.</param>
            <param name="CompletionCallback">The <see cref="T:Elsa.Workflows.Services.ActivityCompletionCallback"/> delegate to invoke when the scheduled <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity completes.</param>
            <param name="Tag">An optional tag.</param>
        </member>
        <member name="M:Elsa.Workflows.ActivityCompletionCallbackEntry.#ctor(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Models.ActivityNode,Elsa.Workflows.Services.ActivityCompletionCallback,System.Object)">
            <summary>
            A delegate entry that is used by activities to be notified when the activities they scheduled are completed.
            </summary>
            <param name="Owner">The activity scheduling the <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity.</param>
            <param name="Child">The child <see cref="T:Elsa.Workflows.Contracts.IActivity"/> being scheduled.</param>
            <param name="CompletionCallback">The <see cref="T:Elsa.Workflows.Services.ActivityCompletionCallback"/> delegate to invoke when the scheduled <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity completes.</param>
            <param name="Tag">An optional tag.</param>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Owner">
            <summary>The activity scheduling the <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity.</summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child">
            <summary>The child <see cref="T:Elsa.Workflows.Contracts.IActivity"/> being scheduled.</summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletionCallbackEntry.CompletionCallback">
            <summary>The <see cref="T:Elsa.Workflows.Services.ActivityCompletionCallback"/> delegate to invoke when the scheduled <see cref="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Child"/> activity completes.</summary>
        </member>
        <member name="P:Elsa.Workflows.ActivityCompletionCallbackEntry.Tag">
            <summary>An optional tag.</summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivity">
            <summary>
            Represents an activity, which is an atomic unit of operation within a workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.Id">
            <summary>
            An identifier that is unique within a collection of activities. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.NodeId">
            <summary>
            An identifier that is unique within a the entire workflow graph. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.Name">
            <summary>
            An optional name by which the activity can be referenced.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.Type">
            <summary>
            The logical type name of the activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.Version">
            <summary>
            The version of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.CustomProperties">
            <summary>
            A bag of properties that can be used by custom activities and other code such as middleware components to store additional values with the activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.SyntheticProperties">
            <summary>
            Synthetic properties are dynamic properties not found on the activity class itself.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivity.Metadata">
            <summary>
            Metadata associated with the activity. This is typically used by the workflow designer to store information about the activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivity.CanExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a value indicating whether the activity can execute.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivity.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Invoked when the activity executes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityDescriber">
            <summary>
            Creates instances of <see cref="T:Elsa.Workflows.Models.ActivityDescriptor" /> for a given activity type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.DescribeActivityAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Describes the specified activity type.
            </summary>
            <param name="activityType">The activity type to describe.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The activity descriptor.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.DescribeOutputPropertyAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of <see cref="T:Elsa.Workflows.Models.OutputDescriptor"/> for the specified property. 
            </summary>
            <param name="propertyInfo">The property to describe.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The output descriptor.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.DescribeInputPropertyAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of <see cref="T:Elsa.Workflows.Models.InputDescriptor"/> for the specified property.
            </summary>
            <param name="propertyInfo">The property to describe.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The input descriptor.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.DescribeInputPropertiesAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Describes the input properties of the specified activity type.
            </summary>
            <param name="activityType">The activity type to describe.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The input descriptors.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.DescribeOutputPropertiesAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Describes the output properties of the specified activity type.
            </summary>
            <param name="activityType">The activity type to describe.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The output descriptors.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.GetInputProperties(System.Type)">
            <summary>
            Gets the input properties of the specified activity type.
            </summary>
            <param name="activityType">The activity type.</param>
            <returns>The input properties.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriber.GetOutputProperties(System.Type)">
            <summary>
            Gets the output properties of the specified activity type.
            </summary>
            <param name="activityType">The activity type.</param>
            <returns>The output properties.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityDescriptorModifier">
            <summary>
            Provides a way to modify activity descriptors as they are registered.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityDescriptorModifier.Modify(Elsa.Workflows.Models.ActivityDescriptor)">
            <summary>
            Modifies the specified activity descriptor.
            </summary>
            <param name="descriptor">The activity descriptor to modify.</param>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityExecutionPipeline">
            <summary>
            Represents a pipeline that can be used to execute an activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityExecutionPipeline.Setup(System.Action{Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder})">
            <summary>
            Sets up the pipeline.
            </summary>
            <param name="setup">The callback that configures the pipeline.</param>
            <returns>The final <see cref="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate"/> delegate.</returns>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityExecutionPipeline.Pipeline">
            <summary>
            The pipeline delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityExecutionPipeline.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Executes the pipeline.
            </summary>
            <param name="context">The activity execution context.</param>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder">
            <summary>
            Builds an activity execution pipeline.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder.ServiceProvider">
            <summary>
            The current service provider to resolve services from.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder.Use(System.Func{Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate,Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate})">
            <summary>
            Installs the specified delegate as a middleware component.
            </summary>
            <param name="middleware">The middleware delegate to install.</param>
            <returns>The current <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder"/>.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder.Build">
            <summary>
            Constructs the final <see cref="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate"/> delegate that invokes each installed middleware component.
            </summary>
            <returns>The final <see cref="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate"/> delegate.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder.Reset">
            <summary>
            Clears the current pipeline.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityInvoker">
            <summary>
            Invokes activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityInvoker.InvokeAsync(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Options.ActivityInvocationOptions)">
            <summary>
            Invokes the specified activity.
            </summary>
            <param name="workflowExecutionContext">The workflow execution context.</param>
            <param name="activity">The activity to invoke.</param>
            <param name="options"></param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityInvoker.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Invokes the specified activity execution context.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityProvider">
            <summary>
            Represents a provider of activity descriptors, which can be used from activity pickers.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityProvider.GetDescriptorsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of <see cref="T:Elsa.Workflows.Models.ActivityDescriptor"/> objects.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityRegistry">
            <summary>
            Stores all activity descriptors available to the system.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Add(System.Type,Elsa.Workflows.Models.ActivityDescriptor)">
            <summary>
            Adds an activity descriptor to the registry.
            </summary>
            <param name="providerType">The type of the activity provider.</param>
            <param name="descriptor">The activity descriptor to add.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.AddMany(System.Type,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityDescriptor})">
            <summary>
            Adds multiple activity descriptors to the registry.
            </summary>
            <param name="providerType">The type of the activity provider.</param>
            <param name="descriptors">The activity descriptors to add.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Clear">
            <summary>
            Clears all activity descriptors from the registry.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.ClearProvider(System.Type)">
            <summary>
            Clears all activity descriptors provided by the specified provider.
            </summary>
            <param name="providerType">The type of the activity provider.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.ListAll">
            <summary>
            Returns all activity descriptors in the registry.
            </summary>
            <returns>All activity descriptors in the registry.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.ListByProvider(System.Type)">
            <summary>
            Returns all activity descriptors provided by the specified provider.
            </summary>
            <param name="providerType">The type of the activity provider.</param>
            <returns>All activity descriptors provided by the specified provider.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Find(System.String)">
            <summary>
            Returns the activity descriptor for the specified activity type.
            </summary>
            <param name="type">The activity type.</param>
            <returns>The activity descriptor for the specified activity type.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Find(System.String,System.Int32)">
            <summary>
            Returns the activity descriptor for the specified activity type and version.
            </summary>
            <param name="type">The activity type.</param>
            <param name="version">The activity version.</param>
            <returns>The activity descriptor for the specified activity type and version.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Find(System.Func{Elsa.Workflows.Models.ActivityDescriptor,System.Boolean})">
            <summary>
            Returns the activity descriptor matching the specified predicate.
            </summary>
            <param name="predicate">The predicate to match.</param>
            <returns>The activity descriptor matching the specified predicate.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.FindMany(System.Func{Elsa.Workflows.Models.ActivityDescriptor,System.Boolean})">
            <summary>
            Returns all activity descriptors matching the specified predicate.
            </summary>
            <param name="predicate">The predicate to match.</param>
            <returns>All activity descriptors matching the specified predicate.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.Register(Elsa.Workflows.Models.ActivityDescriptor)">
            <summary>
            Registers an activity descriptor.
            </summary>
            <param name="descriptor">The activity descriptor to register.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.RegisterAsync(System.Type,System.Threading.CancellationToken)">
            <summary>
            Registers an activity type.
            </summary>
            <param name="activityType">The activity type to register.</param>
            <param name="cancellationToken">An optional cancellation token.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityRegistry.RegisterAsync(System.Collections.Generic.IEnumerable{System.Type},System.Threading.CancellationToken)">
            <summary>
            Registers multiple activity types.
            </summary>
            <param name="activityTypes">The activity types to register.</param>
            <param name="cancellationToken">An optional cancellation token.</param>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityResolver">
            <summary>
            An activity resolver inspects a given activity and returns its contained activities.
            They are used to inspect a workflow structure and build a graph of nodes from it for easy node traversal.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityResolver.Priority">
            <summary>
            The priority of this resolver. Resolvers with higher priority are executed first.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityResolver.GetSupportsActivity(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns true if this resolver supports the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityResolver.GetActivitiesAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <summary>
            Returns a list of contained activities for the specified activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityScheduler">
            <summary>
            The scheduler contains work items to execute.
            It continuously takes the next work item from the list until there are no more items left.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityScheduler.HasAny">
            <summary>
            Returns true if there are any work items in the scheduler.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.Schedule(Elsa.Workflows.Models.ActivityWorkItem)">
            <summary>
            Schedules a work item.
            </summary>
            <param name="workItem">The work item to schedule.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.Take">
            <summary>
            Takes the next work item from the scheduler.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.List">
            <summary>
            Returns a list of all work items in the scheduler.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.Any(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <summary>
            Returns true if there are any work items matching the specified predicate.
            </summary>
            <param name="predicate">The predicate to match.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.Find(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <summary>
            Returns the first work item matching the specified predicate.
            </summary>
            <param name="predicate">The predicate to match.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityScheduler.Clear">
            <summary>
            Clears all work items from the scheduler.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivitySerializer">
            <summary>
            Serializes and deserializes activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivitySerializer.Serialize(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Serializes the specified activity.
            </summary>
            <param name="activity">The activity to serialize.</param>
            <returns>The serialized activity.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivitySerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="value">The value to serialize.</param>
            <returns>The serialized value.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivitySerializer.Deserialize(System.String)">
            <summary>
            Deserializes the specified serialized activity.
            </summary>
            <param name="serializedActivity">The serialized activity.</param>
            <returns>The deserialized activity.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivitySerializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes the specified serialized value.
            </summary>
            <param name="serializedValue">The serialized value.</param>
            <param name="type">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivitySerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified serialized value.
            </summary>
            <param name="serializedValue">The serialized value.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityVisitor">
            <summary>
            Walks an activity tree starting at the root.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IActivityVisitor.VisitAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <summary>
            Visits the specified activity and returns a tree structure representing the activity and its descendants.
            </summary>
            <param name="activity">The activity to visit.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A tree structure representing the activity and its descendants.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityWithResult`1">
            <summary>
            Contract for custom activities that return a result.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityWithResult`1.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IActivityWithResult">
            <summary>
            Contract for custom activities that return a result.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IActivityWithResult.Result">
            <summary>
            The result of the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IApiSerializer">
            <summary>
            Provides serializer options and services for model serialization suitable for APIs.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IApiSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified model.
            </summary>
            <param name="model">The model to serialize.</param>
            <returns>The serialized model.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IApiSerializer.Deserialize(System.String)">
            <summary>
            Deserializes the specified serialized model.
            </summary>
            <param name="serializedModel">The serialized model.</param>
            <returns>The deserialized model.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IApiSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified serialized model.
            </summary>
            <param name="serializedModel">The serialized model.</param>
            <returns>The deserialized model.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IApiSerializer.GetOptions">
            <summary>
            Returns the serializer options.
            </summary>
            <returns>The serializer options.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IApiSerializer.ApplyOptions(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Applies the serializer options.
            </summary>
            <param name="options">The serializer options to apply to.</param>
            <returns>The updated serializer options.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IBehavior">
            <summary>
            Represents a behavior that can be attached to an activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IBehavior.Owner">
            <summary>
            The owner of this behavior.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IBehavior.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Invoked when the activity executes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IBookmarkHasher">
            <summary>
            Computes a hash for a given activity type name and bookmark payload.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IBookmarkHasher.Hash(System.String,System.Object,System.String)">
            <summary>
            Produces a hash from the specified activity type name, bookmark payload and activity instance ID.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IEventGenerator">
            <summary>
            Implemented by trigger activities that generate events. For example, a timer activity is an event generator. 
            </summary>
            <remarks>
            When an event generator activity is marked as startable, it generates new workflow instances. Otherwise, it schedules new workflow executions for the current workflow instance, regardless of whether or not the activity is currently blocking.
            For example, a timer activity will continuously generate events, causing the workflow instance to execute the timer event and subsequent activities, even if the timer activity wasn't scheduled with the workflow execution stack.    
            </remarks>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IExecutionContext">
            <summary>
            Provides a common interface to access the current execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IExecutionContext.Id">
            <summary>
            The unique ID of this execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IExecutionContext.Activity">
            <summary>
            The activity that is currently being executed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IExecutionContext.ExpressionExecutionContext">
            <summary>
            The expression execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IExecutionContext.Variables">
            <summary>
            Returns variables declared in the current execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IExecutionContext.Properties">
            <summary>
            A dictionary of values that can be associated with this activity execution context.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IHasher">
            <summary>
            Computes a hash for a given value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IHasher.Hash(System.String)">
            <summary>
            Produces a hash from the specified string.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IHasher.Hash(System.Object[])">
            <summary>
            Produces a hash from the specified values.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IIdentityGenerator">
            <summary>
            Represents a unique identity generator.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGenerator.GenerateId">
            <summary>
            Generates a unique identifier.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IIdentityGraphService">
            <summary>
            Provides utilities that assigns unique identities to activity graph nodes. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignIdentitiesAsync(Elsa.Workflows.Activities.Workflow,System.Threading.CancellationToken)">
            <summary>
            Assign unique identities tot the specified <see cref="T:Elsa.Workflows.Activities.Workflow"/> and its activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignIdentitiesAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <summary>
            Assign unique identities tot the specified <see cref="T:Elsa.Workflows.Contracts.IActivity"/> graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignIdentities(Elsa.Workflows.Models.ActivityNode)">
            <summary>
            Assign unique identities tot the specified <see cref="T:Elsa.Workflows.Models.ActivityNode"/> graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignIdentities(System.Collections.Generic.ICollection{Elsa.Workflows.Models.ActivityNode})">
            <summary>
            Assign unique identities tot the specified flattened list of <see cref="T:Elsa.Workflows.Models.ActivityNode"/>s.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignInputOutputs(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Assign unique identities to input and output properties of the specified <see cref="T:Elsa.Workflows.Contracts.IActivity"/> graph.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIdentityGraphService.AssignVariables(Elsa.Workflows.Contracts.IVariableContainer)">
            <summary>
            Assign unique identities to variables of the specified <see cref="T:Elsa.Workflows.Contracts.IVariableContainer"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IIncidentStrategy">
            <summary>
            A strategy for handling workflow incidents
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIncidentStrategy.HandleIncident(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Handles an incident.
            </summary>
            <param name="context">The activity execution context where the incident occurred.</param>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IIncidentStrategyResolver">
            <summary>
            Resolves an incident strategy for a given activity execution context.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IIncidentStrategyResolver.ResolveStrategyAsync(Elsa.Workflows.ActivityExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Resolves an incident strategy for a given activity execution context.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IInitializable">
            <summary>
            When implemented by an activity, it is invoked when the graph is built.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IInitializable.InitializeAsync(Elsa.Workflows.Contracts.InitializationContext)">
            <summary>
            Called by the system to initialize the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.InitializationContext">
            <summary>
            Provides access to contextual services and information.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.InitializationContext.#ctor(System.IServiceProvider,System.Threading.CancellationToken)">
            <summary>
            Provides access to contextual services and information.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IMissingActivityTypesRegistry">
            <summary>
            A registry for activity types that are missing from the workflow definition.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IMissingActivityTypesRegistry.Add(Elsa.Workflows.Models.MissingActivityType)">
            <summary>
            Adds a missing activity type.
            </summary>
            <param name="missingActivityType">The missing activity type.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IMissingActivityTypesRegistry.Remove(System.String,System.Int32)">
            <summary>
            Removes a missing activity type.
            </summary>
            <param name="typeName">The type name of the missing activity type to remove.</param>
            <param name="version">The version of the missing activity type to remove.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IMissingActivityTypesRegistry.List">
            <summary>
            Returns a list of missing activity types.
            </summary>
            <returns>A list of missing activity types.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IPayloadSerializer">
            <summary>
            Serializes execution log record payloads.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.Serialize(System.Object)">
            <summary>
            Serializes the payload.
            </summary>
            <param name="payload">the payload to serialize.</param>
            <returns>The serialized payload.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.SerializeToElement(System.Object)">
            <summary>
            Serializes the payload.
            </summary>
            <param name="payload">the payload to serialize.</param>
            <returns>The serialized payload.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.Deserialize(System.String)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedData">The serialized state.</param>
            <returns>The deserialized state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedData">The serialized state.</param>
            <returns>The deserialized state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedData">The serialized state.</param>
            <returns>The deserialized state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPayloadSerializer.Deserialize``1(System.Text.Json.JsonElement)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedData">The serialized state.</param>
            <returns>The deserialized state.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IPropertyDefaultValueResolver">
            <summary>
            Resolves default values for a property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPropertyDefaultValueResolver.GetDefaultValue(System.Reflection.PropertyInfo)">
            <summary>
            Returns the default value for the specified property.
            </summary>
            <param name="activityPropertyInfo">The property to return the default value for.</param>
            <returns>A default value for the specified property.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IPropertyUIHandler">
            <summary>
            Resolves UI options for a property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPropertyUIHandler.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns an object containing properties that will be used to render the UI for the property.
            </summary>
            <param name="propertyInfo">The property to render.</param>
            <param name="context">An optional context to render the property for.</param>
            <param name="cancellationToken">An optional cancellation token.</param>
            <returns>An object that will be used to render the UI for the property.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IPropertyUIHandlerResolver">
            <summary>
            Resolves UI options for a property
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IPropertyUIHandlerResolver.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <summary>
            Returns a dictionary of properties that will be used to render the UI for the property
            </summary>
            <param name="propertyInfo">The property to render</param>
            <param name="context">The context to render the property for</param>
            <param name="cancellationToken">An optional cancellation token</param>
            <returns>A dictionary of properties that will be used to render the UI for the property</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.ISafeSerializer">
            <summary>
            Serializes and deserializes activity state. Only primitive and serializable values are supported.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ISafeSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ISafeSerializer.SerializeToElementAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified state to a <see cref="T:System.Text.Json.JsonElement"/> object.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ISafeSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ISafeSerializer.DeserializeAsync``1(System.Text.Json.JsonElement,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified state.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.ISignalHandler">
            <summary>
            Handles signals.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ISignalHandler.ReceiveSignalAsync(System.Object,Elsa.Workflows.SignalContext)">
            <summary>
            Receives a signal.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IStandardInStreamProvider">
            <summary>
            Implementors should provide an in-stream from which a consumer can read.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IStandardOutStreamProvider">
            <summary>
            Implementors should provide an out-stream to which a consumer can write.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IStartNode">
            <summary>
            Marks an activity as a terminal activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IStorageDriver">
            <summary>
            Represents a storage driver for workflows to write state to.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IStorageDriver.WriteAsync(System.String,System.Object,Elsa.Workflows.StorageDriverContext)">
            <summary>
            Writes a value to the storage driver.
            </summary>
            <param name="id">The ID of the value to write.</param>
            <param name="value">The value to write.</param>
            <param name="context">Context about the workflow execution.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IStorageDriver.ReadAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <summary>
            Reads a value from the storage driver.
            </summary>
            <param name="id">The ID of the value to read.</param>
            <param name="context">Context about the workflow execution.</param>
            <returns>The value read from the storage driver.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IStorageDriver.DeleteAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <summary>
            Deletes a value from the storage driver.
            </summary>
            <param name="id">The ID of the value to delete.</param>
            <param name="context">Context about the workflow execution.</param>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IStorageDriverManager">
            <summary>
            Provides access to registered <see cref="T:Elsa.Workflows.Contracts.IStorageDriver"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IStorageDriverManager.Get(System.Type)">
            <summary>
            Returns a <see cref="T:Elsa.Workflows.Contracts.IStorageDriver"/> by type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IStorageDriverManager.List">
            <summary>
            Return a list of all registered <see cref="T:Elsa.Workflows.Contracts.IStorageDriver"/> implementations.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.ITerminalNode">
            <summary>
            Marks an activity as a terminal activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.ITrigger">
            <summary>
            Implement this method if your activity needs to provide bookmark data that will be used when it is marked as a trigger. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.ITrigger.GetTriggerPayloadsAsync(Elsa.Workflows.TriggerIndexingContext)">
            <summary>
            Implementors should return a list of objects where each object represents a bookmark datum. For each datum, a trigger is created.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IUIHintHandler">
            <summary>
            Represents an interface for handling UI hint information and retrieving property UI handlers.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IUIHintHandler.UIHint">
            <summary>
            Gets the UI hint for the property.
            </summary>
            <remarks>
            The UI hint provides additional information to the UI framework regarding how to display and edit the property.
            </remarks>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IUIHintHandler.GetPropertyUIHandlersAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves the UI handlers associated with a given property asynchronously.
            </summary>
            <param name="propertyInfo">The PropertyInfo object representing the property for which to retrieve the UI handlers.</param>
            <param name="cancellationToken">The cancellation token used to cancel the async operation.</param>
            <returns>A ValueTask representing the asynchronous operation. It resolves to an IEnumerable of IPropertyUIHandler objects representing the UI handlers associated with the specified property.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IVariableContainer">
            <summary>
            Represents a container for <see cref="T:Elsa.Workflows.Memory.Variable"/>s.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IVariableContainer.Variables">
            <summary>
            A collection of variables within the scope of the variable container.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IVariablePersistenceManager">
            <summary>
            Helps managing the persistence of variables.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IVariablePersistenceManager.LoadVariablesAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Loads the variables into the specified <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IVariablePersistenceManager.SaveVariablesAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Persists all persistable variables from the specified <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IVariablePersistenceManager.DeleteVariablesAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Deletes the specified variables from the <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflow">
            <summary>
            Implement this interface or <see cref="T:Elsa.Workflows.WorkflowBase"/> when implementing workflows using code so that they become available to the system.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflow.BuildAsync(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <summary>
            Invokes the the specified <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowActivationStrategy">
            <summary>
            A workflow activation validator controls whether new instances are allowed to be created given certain conditions.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowActivationStrategy.GetAllowActivationAsync(Elsa.Workflows.Contracts.WorkflowInstantiationStrategyContext)">
            <summary>
            Returns true if a new workflow instance should be created, false otherwise.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.WorkflowInstantiationStrategyContext">
            <summary>
            Provides context about the request for allowing the creation of a new workflow instance. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.WorkflowInstantiationStrategyContext.#ctor(Elsa.Workflows.Activities.Workflow,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides context about the request for allowing the creation of a new workflow instance. 
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowBuilder">
            <summary>
            A workflow pipelineBuilder collects information about a workflow to be built programmatically.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.DefinitionId">
            <summary>
            The definition ID to use for the workflow being built.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Id">
            <summary>
            The version ID to use for the workflow being built.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Version">
            <summary>
            The version of the workflow being built.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Name">
            <summary>
            The name of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Description">
            <summary>
            A description of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.IsReadonly">
            <summary>
            WorkflowDefinition is readonly.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.IsSystem">
            <summary>
            WorkflowDefinition is readonly.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.WorkflowOptions">
            <summary>
            Options for the workflow being built.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Root">
            <summary>
            The activity to execute when the workflow is run. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables">
            <summary>
            The workflow variables to store with the workflow being built.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs">
            <summary>
            Gets or sets the inputs.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Outputs">
            <summary>
            Gets or sets the outputs.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Outcomes">
            <summary>
            Gets or sets the outcomes.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Result">
            <summary>
            An internal variable used to get and set the result of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowBuilder.CustomProperties">
            <summary>
            A set of properties that can be used for storing application-specific information about the workflow being built.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithDefinitionId(System.String)">
            <summary>
            A fluent method for setting the <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.DefinitionId"/> property.
            </summary>
            <param name="definitionId">The definition ID to use for the workflow being built.</param>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariable``1">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariable``1(System.String,``0)">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariable``1(``0)">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariable``1(Elsa.Workflows.Memory.Variable{``0})">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariable(Elsa.Workflows.Memory.Variable)">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithVariables(Elsa.Workflows.Memory.Variable[])">
            <summary>
            A fluent method for adding a variable to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Variables"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithInput``1(System.String,System.String)">
            <summary>
            A fluent method for adding an input to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithInput(System.String,System.Type,System.String)">
            <summary>
            A fluent method for adding an input to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithInput(System.String,System.Type,System.Action{Elsa.Workflows.Models.InputDefinition})">
            <summary>
            A fluent method for adding an input to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithInput(System.Action{Elsa.Workflows.Models.InputDefinition})">
            <summary>
            A fluent method for adding an input to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithInput(Elsa.Workflows.Models.InputDefinition)">
            <summary>
            A fluent method for adding an input to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.Inputs"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithCustomProperty(System.String,System.Object)">
            <summary>
            A fluent method for adding a property to <see cref="P:Elsa.Workflows.Contracts.IWorkflowBuilder.CustomProperties"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.WithActivationStrategyType``1">
            <summary>
            Configure the workflow to use the specified <see cref="T:Elsa.Workflows.Contracts.IWorkflowActivationStrategy"/> type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.AsReadonly">
            <summary>
            Marks the workflow as readonly.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.AsSystemWorkflow">
            <summary>
            Marks the workflow as a system workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.BuildWorkflowAsync(System.Threading.CancellationToken)">
            <summary>
            Build a new <see cref="T:Elsa.Workflows.Activities.Workflow"/> instance using the information collected in this pipelineBuilder.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilder.BuildWorkflowAsync(Elsa.Workflows.Contracts.IWorkflow,System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.Activities.Workflow"/> instance using the specified <see cref="T:Elsa.Workflows.Contracts.IWorkflow"/> definition.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowBuilderFactory">
            <summary>
            A factory of workflow builders.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowBuilderFactory.CreateBuilder">
            <summary>
            Creates a new workflow builder.
            </summary>
            <returns>A new workflow builder.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline">
            <summary>
            Represents a workflow execution pipeline.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline.ConfigurePipelineBuilder">
            <summary>
            The pipeline builder factory.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline.Setup(System.Action{Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder})">
            <summary>
            Sets up the pipeline using the specified pipeline builder factory.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline.Pipeline">
            <summary>
            The constructed pipeline delegate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline.ExecuteAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Executes the pipeline with the specified workflow execution context.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder">
            <summary>
            Builds a workflow execution pipeline.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Properties">
            <summary>
            A general-purpose dictionary of values that can be used by middleware components.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Components">
            <summary>
            The middleware components that have been installed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.ServiceProvider">
            <summary>
            The current service provider to resolve services from.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Use(System.Func{Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate,Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate})">
            <summary>
            Installs the specified delegate as a middleware component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Build">
            <summary>
            Constructs the final <see cref="T:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate"/> delegate that invokes each installed middleware component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Reset">
            <summary>
            Clears the current pipeline.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder.Replace(System.Int32,System.Func{Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate,Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate})">
            <summary>
            Replaces the middleware component at the specified index with the specified delegate.
            </summary>
            <param name="index">The index of the middleware component to replace.</param>
            <param name="middleware">The delegate to use as the new middleware component.</param>
            <returns>A new instance of <see cref="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder"/> with the middleware component replaced.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowGraphBuilder">
            <summary>
            Builds a workflow graph from a workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowGraphBuilder.BuildAsync(Elsa.Workflows.Activities.Workflow,System.Threading.CancellationToken)">
            <summary>
            Builds a workflow graph from a workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowRunner">
            <summary>
            Runs a given workflow by scheduling its root activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowStateExtractor">
            <summary>
            Extracts workflow state from a workflow execution context and vice versa.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateExtractor.Extract(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Extracts workflow state from a workflow execution context.
            </summary>
            <param name="workflowExecutionContext">The workflow execution context to map.</param>
            <returns>The mapped workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateExtractor.Apply(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.State.WorkflowState)">
            <summary>
            Applies workflow state to a workflow execution context.
            </summary>
            <param name="workflowExecutionContext">The workflow execution context to map onto.</param>
            <param name="state">The workflow state to apply.</param>
            <returns>The updated workflow execution context.</returns>
        </member>
        <member name="T:Elsa.Workflows.Contracts.IWorkflowStateSerializer">
            <summary>
            Serializes and deserializes workflow states.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.SerializeAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified workflow state.
            </summary>
            <param name="workflowState">The workflow state to serialize.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The serialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.SerializeToUtfBytesAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified workflow state.
            </summary>
            <param name="workflowState">The workflow state to serialize.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The serialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.SerializeToElementAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified workflow state.
            </summary>
            <param name="workflowState">The workflow state to serialize.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The serialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Serializes the specified workflow state.
            </summary>
            <param name="workflowState">The workflow state to serialize.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The serialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.DeserializeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedState">The serialized state.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deserialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.DeserializeAsync(System.Text.Json.JsonElement,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedState">The serialized state.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deserialized workflow state.</returns>
        </member>
        <member name="M:Elsa.Workflows.Contracts.IWorkflowStateSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Deserializes the specified serialized state.
            </summary>
            <param name="serializedState">The serialized state.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deserialized workflow state.</returns>
        </member>
        <member name="T:Elsa.Workflows.ActivityKind">
            <summary>
            Represents the kind of an activity, which affects how it is executed.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityKind.Action">
            <summary>
            Always run synchronously.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityKind.Trigger">
            <summary>
            Can be used to trigger new workflows.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityKind.Job">
            <summary>
            Always run asynchronously.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityKind.Task">
            <summary>
            Run synchronously by default (like <see cref="F:Elsa.Workflows.ActivityKind.Action"/>, but can be configured to run asynchronously (like <see cref="F:Elsa.Workflows.ActivityKind.Job"/>).
            </summary>
        </member>
        <member name="T:Elsa.Workflows.ActivityStatus">
            <summary>
            Represents the status of an activity.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityStatus.Pending">
            <summary>
            The activity is in the Pending state.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityStatus.Running">
            <summary>
            The activity is in the Running state. Note that event if an activity is running, it may not be executing.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityStatus.Completed">
            <summary>
            The activity is in the Completed state.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityStatus.Canceled">
            <summary>
            The activity is in the Canceled state.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ActivityStatus.Faulted">
            <summary>
            The activity is in the Faulted state.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.ForkJoinMode">
            <summary>
            Controls when a <see cref="T:Elsa.Workflows.Activities.Fork"/> completes.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ForkJoinMode.WaitAll">
            <summary>
            The <see cref="T:Elsa.Workflows.Activities.Fork"/> completes after all inbound activities have completed.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.ForkJoinMode.WaitAny">
            <summary>
            The <see cref="T:Elsa.Workflows.Activities.Fork"/> completes as soon as any of its inbound activity completes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.LogPersistenceMode">
            <summary>
            Define the Log Persistence mode to store information
            </summary>
        </member>
        <member name="F:Elsa.Workflows.LogPersistenceMode.Inherit">
            <summary>
            Persist using the Parent mode
            </summary>
        </member>
        <member name="F:Elsa.Workflows.LogPersistenceMode.Include">
            <summary>
            Include property to store
            </summary>
        </member>
        <member name="F:Elsa.Workflows.LogPersistenceMode.Exclude">
            <summary>
            Exclude Property to store
            </summary>
        </member>
        <member name="T:Elsa.Workflows.SwitchMode">
            <summary>
            Represents the switch mode.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.SwitchMode.MatchFirst">
            <summary>
            Yields the outcome of the first condition evaluating to true.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.SwitchMode.MatchAny">
            <summary>
            Yields the outcome of all conditions evaluating to true.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.TypeKind">
            <summary>
            Represents the switch mode.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.WorkflowStatus">
            <summary>
            Represents the current workflow status.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowStatus.Running">
            <summary>
            The workflow is running (although it may be waiting for external stimuli).   
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowStatus.Finished">
            <summary>
            The workflow completed and is no longer running.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.WorkflowSubStatus">
            <summary>
            Represents the workflow sub-status.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Pending">
            <summary>
            The workflow is pending execution.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Executing">
            <summary>
            The workflow is currently executing.   
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Suspended">
            <summary>
            The workflow is currently suspended and waiting for external stimuli to resume.   
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Finished">
            <summary>
            The workflow completed successfully.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Cancelled">
            <summary>
            The workflow was cancelled.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.WorkflowSubStatus.Faulted">
            <summary>
            The workflow has faulted.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Exceptions.ActivityNotFoundException">
            <summary>
            Thrown when a NotFoundActivity is executed.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Exceptions.ActivityNotFoundException.#ctor(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Exceptions.ActivityNotFoundException.MissingTypeName">
            <summary>
            The type name of the missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Exceptions.ActivityNotFoundException.MissingTypeVersion">
            <summary>
            The version of the missing activity type.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Exceptions.FaultException">
            <summary>
            Represents an exception that occurred during workflow execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Exceptions.FaultException.#ctor(System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Exceptions.FaultException.Code">
            <summary>
            Code that identifies the fault type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Exceptions.FaultException.Category">
            <summary>
            Category to categorize the fault. E.g. "HTTP", "Alteration", "Azure", etc.
            This is used to distinguish error codes between modules.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Exceptions.FaultException.Type">
            <summary>
            Kind of fault. E.g. "System", "Business", "Integration", etc.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Expressions.ObjectExpressionHandler">
            <summary>
            Evaluates an object expression.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Expressions.ObjectExpressionHandler.EvaluateAsync(Elsa.Expressions.Models.Expression,System.Type,Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Expressions.Models.ExpressionEvaluatorOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Expressions.OutputExpressionHandler">
            <summary>
            Evaluates an <see cref="T:Elsa.Workflows.Models.Output"/> expression.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Expressions.OutputExpressionHandler.EvaluateAsync(Elsa.Expressions.Models.Expression,System.Type,Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Expressions.Models.ExpressionEvaluatorOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Expressions.VariableExpressionHandler">
            <summary>
            Handles Variable expressions.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Expressions.VariableExpressionHandler.EvaluateAsync(Elsa.Expressions.Models.Expression,System.Type,Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Expressions.Models.ExpressionEvaluatorOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.BackgroundActivityExecutionContextExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.IsBackgroundExecution">
            <summary>
            A key into the activity execution context's transient properties that indicates whether the current activity is being executed in the background.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.SetIsBackgroundExecution(Elsa.Workflows.ActivityExecutionContext,System.Boolean)">
            <summary>
            Configures the activity execution context to execute the current activity in the background.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.GetIsBackgroundExecution(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets a value indicating whether the current activity is being executed in the background.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.SetBackgroundOutcomes(Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the background outcomes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.GetBackgroundOutcomes(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the background outcomes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.SetBackgroundCompletion(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Sets the background outcomes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.GetBackgroundCompleted(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the background outcomes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.SetBackgroundScheduledActivities(Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ScheduledActivity})">
            <summary>
            Sets the background scheduled activities.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BackgroundActivityExecutionContextExtensions.GetBackgroundScheduledActivities(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the background scheduled activities.
            </summary>
            <param name="activityExecutionContext"></param>
        </member>
        <member name="T:Elsa.Workflows.BreakBehaviorActivityExecutionContextExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>. 
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BreakBehaviorActivityExecutionContextExtensions.GetIsBreaking(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets a value indicating whether the current activity is breaking out of a loop.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.BreakBehaviorActivityExecutionContextExtensions.SetIsBreaking(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Sets a value indicating whether the current activity is breaking out of a loop.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Elsa.Workflows.ItemSourceActivityExecutionContextExtensions">
            <summary>
            Provides extension methods for the ActivityExecutionContext class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.ItemSourceActivityExecutionContextExtensions.GetItemSource``1(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Models.Input{System.Object})">
            <summary>
            Retrieves the item source and returns it as an asynchronous enumerable.
            Supported types are <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> and <see> <cref>IAsyncEnumerable{IEnumerable{T}}</cref></see>.
            </summary>
            <typeparam name="T">The type of the items in the source collection.</typeparam>
            <param name="context">The activity execution context.</param>
            <param name="input">The input object.</param>
            <returns>An asynchronous enumerable of items from the source collection.</returns>
        </member>
        <member name="T:Elsa.Workflows.Features.FlowchartFeature">
            <summary>
            Adds support for the Flowchart activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.FlowchartFeature.#ctor(Elsa.Features.Services.IModule)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Features.FlowchartFeature.Apply">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Features.WorkflowsFeature">
            <summary>
            Adds workflow services to the system.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.#ctor(Elsa.Features.Services.IModule)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Features.WorkflowsFeature.StandardInStreamProvider">
            <summary>
            A factory that instantiates a concrete <see cref="T:Elsa.Workflows.Contracts.IStandardInStreamProvider"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Features.WorkflowsFeature.StandardOutStreamProvider">
            <summary>
            A factory that instantiates a concrete <see cref="T:Elsa.Workflows.Contracts.IStandardOutStreamProvider"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Features.WorkflowsFeature.IdentityGenerator">
            <summary>
            A factory that instantiates a concrete <see cref="T:Elsa.Workflows.Contracts.IIdentityGenerator"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Features.WorkflowsFeature.WorkflowExecutionPipeline">
            <summary>
            A delegate to configure the <see cref="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Features.WorkflowsFeature.ActivityExecutionPipeline">
            <summary>
            A delegate to configure the <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipeline"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.WithStandardInStreamProvider(System.Func{System.IServiceProvider,Elsa.Workflows.Contracts.IStandardInStreamProvider})">
            <summary>
            Fluent method to set <see cref="P:Elsa.Workflows.Features.WorkflowsFeature.StandardInStreamProvider"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.WithStandardOutStreamProvider(System.Func{System.IServiceProvider,Elsa.Workflows.Contracts.IStandardOutStreamProvider})">
            <summary>
            Fluent method to set <see cref="P:Elsa.Workflows.Features.WorkflowsFeature.StandardOutStreamProvider"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.WithIdentityGenerator(System.Func{System.IServiceProvider,Elsa.Workflows.Contracts.IIdentityGenerator})">
            <summary>
            Fluent method to set <see cref="P:Elsa.Workflows.Features.WorkflowsFeature.IdentityGenerator"/>.
            </summary>
            <param name="generator"></param>
            <returns></returns>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.WithWorkflowExecutionPipeline(System.Action{Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder})">
            <summary>
            Fluent method to configure the <see cref="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipeline"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.WithActivityExecutionPipeline(System.Action{Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder})">
            <summary>
            Fluent method to configure the <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipeline"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Features.WorkflowsFeature.Apply">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Helpers.Diff`1">
            <summary>
            A utility that compares two collections and returns a set of added, removed and unchanged items.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Helpers.Diff`1.Added">
            <summary>
            The added items.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Helpers.Diff`1.Removed">
            <summary>
            The removed items.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Helpers.Diff`1.Unchanged">
            <summary>
            The unchanged items.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Helpers.Diff">
            <summary>
            A factory class to construct new <see cref="T:Elsa.Workflows.Helpers.Diff`1"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Helpers.Diff.Empty``1">
            <summary>
            Returns an empty diff.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Helpers.Diff.For``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Create a diff between two sets.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.IncidentStrategies.ContinueWithIncidentsStrategy">
            <summary>
            An incident strategy that allows the workflow to continue running, but with incidents.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.IncidentStrategies.ContinueWithIncidentsStrategy.HandleIncident(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.IncidentStrategies.FaultStrategy">
            <summary>
            An incident strategy that puts the entire workflow in the <c>Faulted</c> state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.IncidentStrategies.FaultStrategy.HandleIncident(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Memory.Variable">
            <summary>
            Represents a variable that references a memory block.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable.#ctor(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Memory.Variable.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Memory.Variable.Value">
            <summary>
            A default value for the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Memory.Variable.StorageDriverType">
            <summary>
            The storage driver type to use for persistence.
            If no driver is specified, the referenced memory block will remain in memory for as long as the expression execution context exists.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable.Declare">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Memory.Variable`1">
            <summary>
            Represents a variable that references a memory block.
            </summary>
            <typeparam name="T">The type of the variable.</typeparam>
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.#ctor(System.String,`0)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.Get(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the value of the variable.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.Get(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets the value of the variable.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Memory.Variable`1.WithStorageDriver``1">
            <summary>
            Sets the <see cref="P:Elsa.Workflows.Memory.Variable.StorageDriverType"/> to the specified type.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Memory.VariableBlockMetadata">
            <summary>
            Provides metadata about the variable block.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Memory.VariableBlockMetadata.#ctor(Elsa.Workflows.Memory.Variable,System.Type,System.Boolean)">
            <summary>
            Provides metadata about the variable block.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.ActivityInvokerMiddlewareExtensions">
            <summary>
            Provides extension methods to <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ActivityInvokerMiddlewareExtensions.UseDefaultActivityInvoker(Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder)">
            <summary>
            Adds the <see cref="T:Elsa.Workflows.Middleware.Activities.DefaultActivityInvokerMiddleware"/> component to the pipeline.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.DefaultActivityInvokerMiddleware">
            <summary>
            A default activity execution middleware component that evaluates the current activity's properties, executes the activity and adds any produced bookmarks to the workflow execution context.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.DefaultActivityInvokerMiddleware.#ctor(Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.DefaultActivityInvokerMiddleware.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.DefaultActivityInvokerMiddleware.ExecuteActivityAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Executes the activity using the specified context.
            This method is virtual so that modules might override this implementation to do things like e.g. asynchronous processing.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddlewareExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddlewareExtensions.UseExceptionHandling(Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder)">
            <summary>
            Installs the <see cref="T:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware"/> component in the activity execution pipeline.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware">
            <summary>
            Catches any exceptions thrown by downstream components and transitions the workflow into the faulted state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware.#ctor(Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate,Elsa.Workflows.Contracts.IIncidentStrategyResolver,Elsa.Common.Contracts.ISystemClock,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExceptionHandlingMiddleware.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddlewareExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddleware"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddlewareExtensions.UseExecutionLogging(Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder)">
            <summary>
            Installs the <see cref="T:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddleware"/> component in the activity execution pipeline.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddleware">
            <summary>
            An activity execution middleware component that extracts execution details as <see cref="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddleware.#ctor(Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.ExecutionLogMiddleware.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.LoggingMiddleware">
            <summary>
            An activity execution middleware component that logs information about the activity being executed.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.LoggingMiddleware.#ctor(Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Middleware.Activities.LoggingMiddleware})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.LoggingMiddleware.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.LoggingMiddlewareExtensions">
            <summary>
            Extends <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder"/> to install the <see cref="T:Elsa.Workflows.Middleware.Activities.LoggingMiddleware"/> component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.LoggingMiddlewareExtensions.UseLogging(Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder)">
            <summary>
            Installs the <see cref="T:Elsa.Workflows.Middleware.Activities.LoggingMiddleware"/> component.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.NotificationPublishingMiddleware">
            <summary>
            An activity execution middleware component that publishes <see cref="T:Elsa.Workflows.Notifications.ActivityExecuting"/> and <see cref="T:Elsa.Workflows.Notifications.ActivityExecuted"/> events as an activity executes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.NotificationPublishingMiddleware.#ctor(Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate,Elsa.Mediator.Contracts.INotificationSender)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.NotificationPublishingMiddleware.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Middleware.Activities.NotificationPublishingMiddlewareExtensions">
            <summary>
            Extends <see cref="T:Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder"/> to install the <see cref="T:Elsa.Workflows.Middleware.Activities.LoggingMiddleware"/> component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Activities.NotificationPublishingMiddlewareExtensions.UseNotifications(Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder)">
            <summary>
            Installs the <see cref="T:Elsa.Workflows.Middleware.Activities.LoggingMiddleware"/> component.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Workflows.UseActivitySchedulerMiddlewareExtensions">
            <summary>
            Installs middleware that executes scheduled work items.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.UseActivitySchedulerMiddlewareExtensions.UseDefaultActivityScheduler(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder)">
            <summary>
            Installs middleware that executes scheduled work items. 
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Workflows.DefaultActivitySchedulerMiddleware">
            <summary>
            A workflow execution middleware component that executes scheduled work items.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.DefaultActivitySchedulerMiddleware.#ctor(Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate,Elsa.Workflows.Contracts.IActivityInvoker)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.DefaultActivitySchedulerMiddleware.InvokeAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddlewareExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddlewareExtensions.UseExceptionHandling(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder)">
            <summary>
            Installs the <see cref="T:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware"/> component in the activity execution pipeline.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware">
            <summary>
            Catches any exceptions thrown by downstream components and transitions the workflow into the faulted state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware.#ctor(Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate,Elsa.Common.Contracts.ISystemClock,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Middleware.Workflows.ExceptionHandlingMiddleware.InvokeAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityDescriptor">
            <summary>
            A descriptor of an activity type. It also provides a constructor to create instances of this type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.TypeName">
            <summary>
            The fully qualified name of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Namespace">
            <summary>
            The namespace of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Name">
            <summary>
            The name of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Version">
            <summary>
            The version of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Category">
            <summary>
            The category of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.DisplayName">
            <summary>
            The display name of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Description">
            <summary>
            The description of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Inputs">
            <summary>
            The input properties of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Outputs">
            <summary>
            The output properties of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Attributes">
            <summary>
            The attributes of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Constructor">
            <summary>
            Instantiates a concrete instance of an <see cref="T:Elsa.Workflows.Contracts.IActivity"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Kind">
            <summary>
            The kind of activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.Ports">
            <summary>
            The ports of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.CustomProperties">
            <summary>
            The custom properties of the activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.ConstructionProperties">
            <summary>
            The properties to set when constructing an activity in the designer.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.IsContainer">
            <summary>
            A value indicating whether this activity is a container of child activities.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.IsBrowsable">
            <summary>
            Whether this activity type is selectable from activity pickers.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.IsStart">
            <summary>
            Whether this activity type is a start activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityDescriptor.IsTerminal">
            <summary>
            Whether this activity type is a terminal activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityIncident">
            <summary>
            Holds information about an activity incident.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityIncident.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.ActivityIncident"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityIncident.#ctor(System.String,System.String,System.String,Elsa.Workflows.State.ExceptionState,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.ActivityIncident"/> class.
            </summary>
            <param name="activityId">The ID of the activity that caused the incident.</param>
            <param name="activityType">The type of the activity that caused the incident.</param>
            <param name="message">The message of the incident.</param>
            <param name="exception">The exception that caused the incident.</param>
            <param name="timestamp">The timestamp of the incident.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityIncident.ActivityId">
            <summary>The ID of the activity that caused the incident.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityIncident.ActivityType">
            <summary>The type of the activity that caused the incident.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityIncident.Message">
            <summary>The message of the incident.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityIncident.Exception">
            <summary>The exception that caused the incident.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityIncident.Timestamp">
            <summary>
            The timestamp of the incident.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowInput">
            <summary>
            Represents an activity input name and value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.WorkflowInput.#ctor(System.String,System.Object)">
            <summary>
            Represents an activity input name and value.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityNode">
            <summary>
            Represents an activity in the context of an hierarchical tree structure, providing access to its siblings, parents and children.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityNode.#ctor(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.ActivityNode"/> class.
            </summary>
            <param name="activity">The activity.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityNode.NodeId">
            <summary>
            Gets the node ID.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityNode.Activity">
            <summary>
            Gets the activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityNode.Parents">
            <summary>
            Gets the parents of this node.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityNode.Children">
            <summary>
            Gets the children of this node.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityNode.Descendants">
            <summary>
            Gets the descendants of this node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityNode.Ancestors">
            <summary>
            Gets the ancestors of this node.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityNode.Siblings">
            <summary>
            Gets the siblings of this node.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityNode.SiblingsAndCousins">
            <summary>
            Gets the siblings and cousins of this node.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityOutputRecord">
            <summary>
            Represents a record of an activity's output.
            </summary>
            <param name="ContainerId">The ID of the container that contains the activity.</param>
            <param name="ActivityId">The ID of the activity.</param>
            <param name="ActivityInstanceId">The ID of the activity instance.</param>
            <param name="OutputName">The name of the output.</param>
            <param name="Value">The output value.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRecord.#ctor(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Represents a record of an activity's output.
            </summary>
            <param name="ContainerId">The ID of the container that contains the activity.</param>
            <param name="ActivityId">The ID of the activity.</param>
            <param name="ActivityInstanceId">The ID of the activity instance.</param>
            <param name="OutputName">The name of the output.</param>
            <param name="Value">The output value.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputRecord.ContainerId">
            <summary>The ID of the container that contains the activity.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputRecord.ActivityId">
            <summary>The ID of the activity.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputRecord.ActivityInstanceId">
            <summary>The ID of the activity instance.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputRecord.OutputName">
            <summary>The name of the output.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputRecord.Value">
            <summary>The output value.</summary>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityOutputRegister">
            <summary>
            Stores activity output.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Models.ActivityOutputRegister.DefaultOutputName">
            <summary>
            The default output name.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRegister.Record(Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Records an activity's output.
            </summary>
            <param name="activityExecutionContext">The activity execution context.</param>
            <param name="outputValue">The output value.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRegister.Record(Elsa.Workflows.ActivityExecutionContext,System.String,System.Object)">
            <summary>
            Records an activity's output.
            </summary>
            <param name="activityExecutionContext">The activity execution context.</param>
            <param name="outputName">The name of the output. Defaults to "Result"</param>
            <param name="outputValue">The output value.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRegister.FindMany(System.Func{Elsa.Workflows.Models.ActivityOutputRecord,System.Boolean})">
            <summary>
            Finds all output records matching the specified predicate.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRegister.FindOutputByActivityId(System.String,System.String)">
            <summary>
            Gets the output value for the specified activity ID.
            </summary>
            <param name="activityId">The activity ID.</param>
            <param name="outputName">Name of the output.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputRegister.FindOutputByActivityInstanceId(System.String,System.String)">
            <summary>
            Gets the output value for the specified activity instance ID.
            </summary>
            <param name="activityInstanceId">The activity instance ID.</param>
            <param name="outputName"></param>
            <returns>The output value.</returns>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityOutputs">
            <summary>
            Represents the outputs of an activity.
            </summary>
            <param name="ActivityId">The activity ID.</param>
            <param name="ActivityName">The activity name.</param>
            <param name="OutputNames">The output names.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityOutputs.#ctor(System.String,System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Represents the outputs of an activity.
            </summary>
            <param name="ActivityId">The activity ID.</param>
            <param name="ActivityName">The activity name.</param>
            <param name="OutputNames">The output names.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputs.ActivityId">
            <summary>The activity ID.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputs.ActivityName">
            <summary>The activity name.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityOutputs.OutputNames">
            <summary>The output names.</summary>
        </member>
        <member name="T:Elsa.Workflows.Models.ActivityWorkItem">
            <summary>
            Represents a work item that can be scheduled for execution.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.ActivityWorkItem.#ctor(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.ActivityExecutionContext,System.Object,System.Collections.Generic.IEnumerable{Elsa.Workflows.Memory.Variable},Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new instance of the <see cref="T:Elsa.Workflows.Models.ActivityWorkItem"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.Activity">
            <summary>
            The activity to be executed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.Owner">
            <summary>
            The activity execution context that owns this work item, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.Tag">
            <summary>
            A tag that can be used to identify the work item.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.Variables">
            <summary>
            A set of variables to be created as part of the activity execution context.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.ExistingActivityExecutionContext">
            <summary>
            An existing activity execution context to schedule, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ActivityWorkItem.Input">
            <summary>
            Optional input to pass to the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.Argument">
            <summary>
            A base type for the <see cref="T:Elsa.Workflows.Models.Input`1"/> type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.Argument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.Argument"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.Argument.#ctor(Elsa.Expressions.Models.MemoryBlockReference)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Argument.#ctor(System.Func{Elsa.Expressions.Models.MemoryBlockReference})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.Argument"/> class.
            </summary>
            <param name="memoryBlockReference"></param>
        </member>
        <member name="P:Elsa.Workflows.Models.Argument.MemoryBlockReference">
            <summary>
            Gets or sets the memory block reference.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.ArgumentDefinition">
            <summary>
            Base class for workflow input and output definitions.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ArgumentDefinition.Type">
            <summary>
            The type of the input value.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ArgumentDefinition.Name">
            <summary>
            The technical name of the input.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ArgumentDefinition.DisplayName">
            <summary>
            A user friendly name of the input.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ArgumentDefinition.Description">
            <summary>
            A description of the input.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.ArgumentDefinition.Category">
            <summary>
            The category to which this input belongs.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.Bookmark">
            <summary>
            A bookmark represents a location in a workflow where the workflow can be resumed at a later time.
            </summary>
            <param name="Id">The ID of the bookmark.</param>
            <param name="Name">The name of the bookmark.</param>
            <param name="Hash">The hash of the bookmark.</param>
            <param name="Payload">The data associated with the bookmark.</param>
            <param name="ActivityId">The ID of the activity associated with the bookmark.</param>
            <param name="ActivityNodeId">The ID of the activity node associated with the bookmark.</param>
            <param name="ActivityInstanceId">The ID of the activity instance associated with the bookmark.</param>
            <param name="CreatedAt">The date and time the bookmark was created.</param>
            <param name="AutoBurn">Whether or not the bookmark should be automatically burned.</param>
            <param name="CallbackMethodName">The name of the method on the activity class to invoke when the bookmark is resumed.</param>
            <param name="Metadata">Custom properties associated with the bookmark.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.Bookmark.#ctor(System.String,System.String,System.String,System.Object,System.String,System.String,System.String,System.DateTimeOffset,System.Boolean,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            A bookmark represents a location in a workflow where the workflow can be resumed at a later time.
            </summary>
            <param name="Id">The ID of the bookmark.</param>
            <param name="Name">The name of the bookmark.</param>
            <param name="Hash">The hash of the bookmark.</param>
            <param name="Payload">The data associated with the bookmark.</param>
            <param name="ActivityId">The ID of the activity associated with the bookmark.</param>
            <param name="ActivityNodeId">The ID of the activity node associated with the bookmark.</param>
            <param name="ActivityInstanceId">The ID of the activity instance associated with the bookmark.</param>
            <param name="CreatedAt">The date and time the bookmark was created.</param>
            <param name="AutoBurn">Whether or not the bookmark should be automatically burned.</param>
            <param name="CallbackMethodName">The name of the method on the activity class to invoke when the bookmark is resumed.</param>
            <param name="Metadata">Custom properties associated with the bookmark.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.Id">
            <summary>The ID of the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.Name">
            <summary>The name of the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.Hash">
            <summary>The hash of the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.Payload">
            <summary>The data associated with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.ActivityId">
            <summary>The ID of the activity associated with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.ActivityNodeId">
            <summary>The ID of the activity node associated with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.ActivityInstanceId">
            <summary>The ID of the activity instance associated with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.CreatedAt">
            <summary>The date and time the bookmark was created.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.AutoBurn">
            <summary>Whether or not the bookmark should be automatically burned.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.CallbackMethodName">
            <summary>The name of the method on the activity class to invoke when the bookmark is resumed.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Bookmark.Metadata">
            <summary>Custom properties associated with the bookmark.</summary>
        </member>
        <member name="M:Elsa.Workflows.Models.Bookmark.#ctor">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Models.CancellationTokens">
            <summary>
            Provides cancellation tokens to be used by the system.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.CancellationTokens.#ctor(System.Threading.CancellationToken,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.CancellationTokens"/> struct.
            </summary>
            <param name="applicationCancellationToken">The application cancellation token.</param>
            <param name="systemCancellationToken">The system cancellation token.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.CancellationTokens.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.CancellationTokens"/> struct.
            </summary>
            <param name="duplexCancellationToken">The duplex cancellation token.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.CancellationTokens.op_Implicit(System.Threading.CancellationToken)~Elsa.Workflows.Models.CancellationTokens">
            <summary>
            Implicitly casts a <see cref="T:System.Threading.CancellationToken"/> to a <see cref="T:Elsa.Workflows.Models.CancellationTokens"/> struct.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CancellationTokens.ApplicationCancellationToken">
            <summary>
            Gets or sets the application cancellation token.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CancellationTokens.SystemCancellationToken">
            <summary>
            Gets or sets the system cancellation token.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.CreateBookmarkArgs">
            <summary>
            Provides bookmark creation options.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.Payload">
            <summary>An optional payload to associate with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.Callback">
            <summary>An optional callback to invoke when the bookmark is triggered.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.BookmarkName">
            <summary>An optional name to associate with the bookmark.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.AutoBurn">
            <summary>Whether the bookmark should be automatically burned when triggered.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.IncludeActivityInstanceId">
            <summary>Whether the activity instance ID should be included in the bookmark payload.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.AutoComplete">
            <summary>
            Whether the activity being resumed should be automatically completed if CallBack is not specified.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.CreateBookmarkArgs.Metadata">
            <summary>
            An optional dictionary of metadata to associate with the bookmark.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.EventGenerator">
            <summary>
            Generates events on a workflow instance.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.EventGenerator.#ctor(System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.EventGenerator.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Models.Input">
            <summary>
            A base type for the <see cref="T:Elsa.Workflows.Models.Input`1"/> type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.Input.#ctor(Elsa.Expressions.Models.MemoryBlockReference,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input.#ctor(Elsa.Expressions.Models.Expression,Elsa.Expressions.Models.MemoryBlockReference,System.Type)">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Models.Input.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Input.Type">
            <summary>
            Gets the type of the input.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.Input`1">
            <summary>
            Represents activity input that is evaluated at runtime.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.MemoryBlockReference)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(`0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(System.Func{`0},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Threading.Tasks.ValueTask{`0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(System.Func{System.Threading.Tasks.ValueTask{`0}},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,`0},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Workflows.Memory.Variable)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Workflows.Models.Output)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.Literal{`0})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.Literal)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.ObjectLiteral{`0})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.ObjectLiteral)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.Expression,Elsa.Expressions.Models.MemoryBlockReference)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.Input`1.#ctor(Elsa.Expressions.Models.Expression)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Models.InputDefinition">
            <summary>
            A definition of a workflow's input.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDefinition.UIHint">
            <summary>
            The UI hint to use for this input. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDefinition.StorageDriverType">
            <summary>
            The type of the storage driver to use for this input.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.InputDescriptor">
            <summary>
            A descriptor of an activity's input property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.InputDescriptor.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.InputDescriptor.#ctor(System.String,System.Type,System.Func{Elsa.Workflows.Contracts.IActivity,System.Object},System.Action{Elsa.Workflows.Contracts.IActivity,System.Object},System.Boolean,System.String,System.String,System.String,System.String,System.Single,System.Object,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Type,System.Reflection.PropertyInfo,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.IsWrapped">
            <summary>
            True if the property is wrapped with an <see cref="T:Elsa.Workflows.Models.Input`1"/> type, false otherwise.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.UIHint">
            <summary>
            A string value that hints at what UI control might be used to render in a UI tool.  
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.Category">
            <summary>
            The category to whcih this input belongs. Can be used by UI to e.g. render different inputs in different tabs.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.DefaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.DefaultSyntax">
            <summary>
            The default syntax.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.IsReadOnly">
            <summary>
            True if the input is readonly, false otherwise.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.StorageDriverType">
            <summary>
            The storage driver type to use for persistence.
            If no driver is specified, the referenced memory block will remain in memory for as long as the expression execution context exists.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.AutoEvaluate">
            <summary>
            True if the expression should be evaluated automatically, false otherwise. Defaults to true.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.InputDescriptor.UISpecifications">
            <summary>
            A dictionary of UI specifications to be used by the UI.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.MissingActivityType">
            <summary>
            Represents a missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.MissingActivityType.TypeName">
            <summary>
            The type name of the missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.MissingActivityType.Version">
            <summary>
            The version of the missing activity type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.MissingActivityType.ActivityJson">
            <summary>
            The original activity JSON.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.MissingActivityType.Outcomes">
            <summary>
            The original activity outcomes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.OutputDefinition">
            <summary>
            A definition of a workflow's output.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.OutputDescriptor">
            <summary>
            A descriptor of an activity's output property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.OutputDescriptor.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Models.OutputDescriptor.#ctor(System.String,System.String,System.Type,System.Func{Elsa.Workflows.Contracts.IActivity,System.Object},System.Action{Elsa.Workflows.Contracts.IActivity,System.Object},System.Reflection.PropertyInfo,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Models.Port">
            <summary>
            Represents a port on an activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Port.Name">
            <summary>
            Gets or sets the name of the port.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Port.DisplayName">
            <summary>
            Gets or sets the display name of the port.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Port.Type">
            <summary>
            Gets or sets the type of the port.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.Port.IsBrowsable">
            <summary>
            Gets or sets the visibility of the port.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.PortType">
            <summary>
            The type of a port.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Models.PortType.Embedded">
            <summary>
            A port that is embedded in the activity.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Models.PortType.Flow">
            <summary>
            A flow port.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.PropertyDescriptor">
            <summary>
            A base type for <see cref="T:Elsa.Workflows.Models.InputDescriptor"/> and <see cref="T:Elsa.Workflows.Models.OutputDescriptor"/>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.Type">
            <summary>
            The .NET type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.DisplayName">
            <summary>
            The user friendly name of the input. Used by UI tools.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.Description">
            <summary>
            The user friendly description of the input. Used by UI tools.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.Order">
            <summary>
            The order in which this input should be displayed by UI tools.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.IsBrowsable">
            <summary>
            True if this property should be displayed by UI tools, false otherwise.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.IsSerializable">
            <summary>
            True if this property can be serialized.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.IsSynthetic">
            <summary>
            True if this input property is synthetic, which means it does not exist physically on the activity's .NET type.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.ValueGetter">
            <summary>
            Returns the value of the input property for the specified activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.ValueSetter">
            <summary>
            Sets the value of the input property for the specified activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.PropertyDescriptor.PropertyInfo">
            <summary>
            The source of the property, if any.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.RunWorkflowResult">
            <summary>
            Contains information about a workflow run, such as <see cref="P:Elsa.Workflows.Models.RunWorkflowResult.WorkflowState"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.RunWorkflowResult.#ctor(Elsa.Workflows.State.WorkflowState,Elsa.Workflows.Activities.Workflow,System.Object)">
            <summary>
            Contains information about a workflow run, such as <see cref="P:Elsa.Workflows.Models.RunWorkflowResult.WorkflowState"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.RunWorkflowResult`1">
            <summary>
            Contains information about a workflow run, such as <see cref="P:Elsa.Workflows.Models.RunWorkflowResult`1.WorkflowState"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.RunWorkflowResult`1.#ctor(Elsa.Workflows.State.WorkflowState,Elsa.Workflows.Activities.Workflow,`0)">
            <summary>
            Contains information about a workflow run, such as <see cref="P:Elsa.Workflows.Models.RunWorkflowResult`1.WorkflowState"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.VariableDefinition">
            <summary>
            Stores information about a workflow variable.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.VariableDefinition.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Stores information about a workflow variable.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.VariableModel">
            <summary>
            Represents a shape of a variable that can be serialized.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.VariableModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.VariableModel"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.VariableModel.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.VariableModel"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.VariableModel.Id">
            <summary>
            Gets or sets the ID of the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.VariableModel.Name">
            <summary>
            Gets or sets the name of the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.VariableModel.TypeName">
            <summary>
            Gets or sets the type name of the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.VariableModel.Value">
            <summary>
            Gets or sets the value of the variable.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.VariableModel.StorageDriverTypeName">
            <summary>
            Gets or sets the storage driver type name of the variable.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowExecutionLogEntry">
            <summary>
            Represents a workflow execution log entry.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.WorkflowExecutionLogEntry.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.DateTimeOffset,System.Int64,System.String,System.String,System.String,System.Object)">
            <summary>
            Represents a workflow execution log entry.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowExecutionMode">
            <summary>
            The runtime mode to use when running thr workflow.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Models.WorkflowExecutionMode.Synchronous">
            <summary>
            The workflow will be executed synchronously, blocking the current thread until the workflow completes or gets suspended.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Models.WorkflowExecutionMode.Asynchronous">
            <summary>
            The workflow will be executed asynchronously, returning immediately.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowGraph">
            <summary>
            Hold a reference to a <see cref="P:Elsa.Workflows.Models.WorkflowGraph.Workflow"/> and a collection of <see cref="T:Elsa.Workflows.Models.ActivityNode"/> instances representing the workflow.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Models.WorkflowGraph.#ctor(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.Models.ActivityNode,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Models.WorkflowGraph"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.Workflow">
            <summary>
            Gets the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.Nodes">
            <summary>
            Gets a flat collection of all nodes in the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.NodeActivityLookup">
            <summary>
            Gets a lookup of nodes by their activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.NodeHashLookup">
            <summary>
            Gets a lookup of nodes by their hash.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowGraph.NodeIdLookup">
            <summary>
            Gets a lookup of nodes by their ID.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowMetadata">
            <summary>
            Represents metadata about a workflow.
            </summary>
            <param name="Name">The name of the workflow.</param>
            <param name="Description">The description of the workflow.</param>
            <param name="CreatedAt">The date and time the workflow was created.</param>
            <param name="ToolVersion">The version of the tool that created the workflow.</param>
        </member>
        <member name="M:Elsa.Workflows.Models.WorkflowMetadata.#ctor(System.String,System.String,System.DateTimeOffset,System.Version)">
            <summary>
            Represents metadata about a workflow.
            </summary>
            <param name="Name">The name of the workflow.</param>
            <param name="Description">The description of the workflow.</param>
            <param name="CreatedAt">The date and time the workflow was created.</param>
            <param name="ToolVersion">The version of the tool that created the workflow.</param>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowMetadata.Name">
            <summary>The name of the workflow.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowMetadata.Description">
            <summary>The description of the workflow.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowMetadata.CreatedAt">
            <summary>The date and time the workflow was created.</summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowMetadata.ToolVersion">
            <summary>The version of the tool that created the workflow.</summary>
        </member>
        <member name="T:Elsa.Workflows.Models.WorkflowOptions">
            <summary>
            Provides workflow options.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowOptions.ActivationStrategyType">
            <summary>
            The type of <see cref="T:Elsa.Workflows.Contracts.IWorkflowActivationStrategy"/> to apply when new instances are requested to be created.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowOptions.UsableAsActivity">
            <summary>
            Used to decide if the workflow can be used as an activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowOptions.AutoUpdateConsumingWorkflows">
            <summary>
            Used to decide if the consuming workflows should be updated automatically to use the last published version of the workflow when it is published.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowOptions.ActivityCategory">
            <summary>
            The category to use when the workflow is used as an activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Models.WorkflowOptions.IncidentStrategyType">
            <summary>
            The type of <see cref="T:Elsa.Workflows.Contracts.IIncidentStrategy"/> to use when a fault occurs in the workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.ActivityCancelled">
            <summary>
            A notification that is sent when an activity is cancelled.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="M:Elsa.Workflows.Notifications.ActivityCancelled.#ctor(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            A notification that is sent when an activity is cancelled.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="P:Elsa.Workflows.Notifications.ActivityCancelled.ActivityExecutionContext">
            <summary>The activity execution context.</summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.ActivityExecuted">
            <summary>
            A notification that is sent when an activity has executed.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="M:Elsa.Workflows.Notifications.ActivityExecuted.#ctor(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            A notification that is sent when an activity has executed.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="P:Elsa.Workflows.Notifications.ActivityExecuted.ActivityExecutionContext">
            <summary>The activity execution context.</summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.ActivityExecuting">
            <summary>
            A notification that is sent when an activity is about to execute.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="M:Elsa.Workflows.Notifications.ActivityExecuting.#ctor(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            A notification that is sent when an activity is about to execute.
            </summary>
            <param name="ActivityExecutionContext">The activity execution context.</param>
        </member>
        <member name="P:Elsa.Workflows.Notifications.ActivityExecuting.ActivityExecutionContext">
            <summary>The activity execution context.</summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.WorkflowExecuted">
            <summary>
            A domain event that is published everytime a burst of execution completes.  
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Notifications.WorkflowExecuted.#ctor(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.State.WorkflowState,Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            A domain event that is published everytime a burst of execution completes.  
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.WorkflowExecuting">
            <summary>
            A domain event that is published before a burst of execution begins.  
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Notifications.WorkflowExecuting.#ctor(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            A domain event that is published before a burst of execution begins.  
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.WorkflowFinished">
            <summary>
            A domain event that is published when a workflow finishes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Notifications.WorkflowFinished.#ctor(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.State.WorkflowState,Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            A domain event that is published when a workflow finishes.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Notifications.WorkflowStarted">
            <summary>
            A domain event that is published when a workflow starts.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Notifications.WorkflowStarted.#ctor(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            A domain event that is published when a workflow starts.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Options.ActivityInvocationOptions">
            <summary>
            Represents options for invoking an activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Options.ActivityInvocationOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Elsa.Workflows.Options.ActivityInvocationOptions"/> class.</summary>
        </member>
        <member name="M:Elsa.Workflows.Options.ActivityInvocationOptions.#ctor(Elsa.Workflows.ActivityExecutionContext,System.Object,System.Collections.Generic.IEnumerable{Elsa.Workflows.Memory.Variable},Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance of the <see cref="T:Elsa.Workflows.Options.ActivityInvocationOptions"/> class.</summary>
            <param name="owner">The activity execution context that owns this invocation.</param>
            <param name="tag">An optional tag that can be used to identify the invocation.</param>
            <param name="variables">The variables to declare in the activity execution context that will be created for this invocation.</param>
            <param name="existingActivityExecutionContext">An existing activity execution context to reuse.</param>
            <param name="input">Optional input to pass to the activity.</param>
        </member>
        <member name="P:Elsa.Workflows.Options.ActivityInvocationOptions.Owner">
            <summary>The activity execution context that owns this invocation.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ActivityInvocationOptions.Tag">
            <summary>An optional tag that can be used to identify the invocation.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ActivityInvocationOptions.Variables">
            <summary>The variables to declare in the activity execution context that will be created for this invocation.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ActivityInvocationOptions.ExistingActivityExecutionContext">
            <summary>An existing activity execution context to reuse.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ActivityInvocationOptions.Input">
            <summary>
            Optional input to pass to the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Options.DynamicOutcomesOptions">
            <summary>
            Options for dynamic outcomes.
            </summary>
            <param name="FixedOutcomes">A list of fixed outcomes that will be appended to the final list of outcomes.</param>
        </member>
        <member name="M:Elsa.Workflows.Options.DynamicOutcomesOptions.#ctor(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Options for dynamic outcomes.
            </summary>
            <param name="FixedOutcomes">A list of fixed outcomes that will be appended to the final list of outcomes.</param>
        </member>
        <member name="P:Elsa.Workflows.Options.DynamicOutcomesOptions.FixedOutcomes">
            <summary>A list of fixed outcomes that will be appended to the final list of outcomes.</summary>
        </member>
        <member name="T:Elsa.Workflows.Options.IncidentOptions">
            <summary>
            Options for configuring how incidents are handled.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Options.IncidentOptions.DefaultIncidentStrategy">
            <summary>
            Gets or sets the default incident strategy to use when no strategy is configured on the workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Options.RunWorkflowOptions">
            <summary>
            Provides options for running a workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Options.ScheduleWorkOptions">
            <summary>
            Represents options for scheduling a work item.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.CompletionCallback">
            <summary>The callback to invoke when the work item has completed.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.Tag">
            <summary>A tag that can be used to identify the work item.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.Variables">
            <summary>A collection of variables to declare in the activity execution context that will be created for this work item.</summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.ExistingActivityExecutionContext">
            <summary>
            An existing activity execution context to use instead of creating a new one.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.PreventDuplicateScheduling">
            <summary>
            A flag indicating whether the work item should be scheduled even if a work item with the same tag already exists.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Options.ScheduleWorkOptions.Input">
            <summary>
            Input to send to the workflow.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipeline">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipeline.#ctor(System.IServiceProvider,System.Action{Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipeline.Setup(System.Action{Elsa.Workflows.Contracts.IActivityExecutionPipelineBuilder})">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipeline.Pipeline">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipeline.ExecuteAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder.ServiceProvider">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder.Use(System.Func{Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate,Elsa.Workflows.Pipelines.ActivityExecution.ActivityMiddlewareDelegate})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.ActivityExecution.ActivityExecutionPipelinePipelineBuilder.Reset">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionMiddlewareExtensions">
            <summary>
            Provides extensions to <see cref="T:Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder"/> that adds support for installing <see cref="T:Elsa.Workflows.Contracts.IWorkflowExecutionMiddleware"/> components.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionMiddlewareExtensions.UseMiddleware``1(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder,System.Object[])">
            <summary>
            Installs the specified middleware component into the pipeline being built.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionMiddlewareExtensions.ReplaceTerminal``1(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder,System.Object[])">
            <summary>
            Replaces the terminal middleware component with the specified middleware component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionMiddlewareExtensions.Replace``1(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder,System.Int32,System.Object[])">
            <summary>
            Replaces the middleware component at the specified index with the specified middleware component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionMiddlewareExtensions.CreateMiddlewareDelegateFactory``1(Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder,System.Object[])">
            <summary>
            Creates a middleware delegate for the specified middleware component.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline.#ctor(System.IServiceProvider,System.Action{Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline"/> class.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline.Pipeline">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline.ConfigurePipelineBuilder">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline.Setup(System.Action{Elsa.Workflows.Contracts.IWorkflowExecutionPipelineBuilder})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipeline.ExecuteAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.#ctor(System.IServiceProvider)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.Properties">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.Components">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.ServiceProvider">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.Use(System.Func{Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate,Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowMiddlewareDelegate})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Pipelines.WorkflowExecution.WorkflowExecutionPipelineBuilder.Reset">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.PortResolvers.PropertyBasedActivityResolver">
            <summary>
            Returns a list of outbound activities for a given activity by reflecting over its public properties matching <see cref="T:Elsa.Workflows.Contracts.IActivity"/> and <c>ICollection{IActivity}</c>.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.PortResolvers.PropertyBasedActivityResolver.Priority">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.PortResolvers.PropertyBasedActivityResolver.GetSupportsActivity(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.PortResolvers.PropertyBasedActivityResolver.GetActivitiesAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.PortResolvers.SwitchActivityResolver">
            <summary>
            Returns a list of outbound activities for a given <see cref="T:Elsa.Workflows.Activities.Switch"/> activity's branches.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.PortResolvers.SwitchActivityResolver.Priority">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.PortResolvers.SwitchActivityResolver.GetSupportsActivity(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.PortResolvers.SwitchActivityResolver.GetActivitiesAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Configurators.AdditionalConvertersConfigurator">
            <summary>
            Add additional <see cref="T:System.Text.Json.Serialization.JsonConverter"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Configurators.AdditionalConvertersConfigurator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Configurators.AdditionalConvertersConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Configurators.AdditionalConvertersConfigurator.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Configurators.CustomConstructorConfigurator">
            <summary>
            Configures the contract resolver to add support for using non-default, private constructors for deserialization.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Configurators.CustomConstructorConfigurator.GetModifiers">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ActivityJsonConverter">
            <summary>
            (De)serializes objects of type <see cref="T:Elsa.Workflows.Contracts.IActivity"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverter.#ctor(Elsa.Workflows.Contracts.IActivityRegistry,Elsa.Workflows.Contracts.IActivityFactory,Elsa.Expressions.Contracts.IExpressionDescriptorRegistry,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Serialization.Converters.ActivityJsonConverter})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Contracts.IActivity,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ActivityJsonConverterFactory">
            <summary>
            Creates instances of <see cref="T:Elsa.Workflows.Serialization.Converters.ActivityJsonConverter"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverterFactory.#ctor(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ActivityJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverter">
            <summary>
            Serializes an object to JSON, excluding properties marked with <see cref="T:Elsa.Workflows.Attributes.ExcludeFromHashAttribute"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverterFactory">
            <summary>
            A factory for creating <see cref="T:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverter"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExcludeFromHashConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverter">
            <summary>
            Parses a JON string into a dynamic <see cref="T:System.Dynamic.ExpandoObject"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverter"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpandoObjectConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter">
            <summary>
            Serializes <see cref="T:Elsa.Expressions.Models.Expression"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter.#ctor(Elsa.Expressions.Contracts.IExpressionDescriptorRegistry)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Expressions.Models.Expression,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverter"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverterFactory.#ctor(Elsa.Expressions.Contracts.IExpressionDescriptorRegistry)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.ExpressionJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1">
            <summary>
            Serializes <see cref="T:Elsa.Workflows.Models.Input"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1.#ctor(Elsa.Expressions.Contracts.IExpressionDescriptorRegistry)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Models.Input{`0},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.InputJsonConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.InputJsonConverter`1"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverterFactory.#ctor(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.InputJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverter">
            <summary>
            Ignores properties with the <see cref="T:Elsa.Workflows.Attributes.JsonIgnoreCompositeRootAttribute"/> attribute.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Contracts.IActivity,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverterFactory">
            <summary>
            A <see cref="T:System.Text.Json.Serialization.JsonConverterFactory"/> that creates <see cref="T:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverter"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonIgnoreCompositeRootConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.JsonPrimitiveToStringConverter">
            <summary>
            Converts primitives to and from JSON strings.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonPrimitiveToStringConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.JsonPrimitiveToStringConverter.Write(System.Text.Json.Utf8JsonWriter,System.String,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1">
            <summary>
            Serializes <see cref="T:Elsa.Workflows.Models.Input"/> objects.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Models.Output{`0},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.OutputJsonConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.OutputJsonConverter`1"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverterFactory.#ctor(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.OutputJsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.PolymorphicDictionaryConverter">
            <summary>
            A converter that can convert a dictionary of string keys and object values while preserving the object type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicDictionaryConverter.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicDictionaryConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicDictionaryConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverter">
            <summary>
            Reads objects as primitive types rather than <see cref="T:System.Text.Json.JsonElement"/> values while also maintaining the .NET type name for reconstructing the actual type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverter.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverter"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.PolymorphicObjectConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.SafeDictionaryConverter">
            <summary>
            A JSON converter that safely serializes a dictionary of objects, even if some of the objects are not serializable.
            In that case, the converter will serialize a fallback object that contains the type name of the original object.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeDictionaryConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeDictionaryConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.SafeValueConverter">
            <summary>
            A JSON converter that safely serializes a value, even if it's not serializable.
            In that case, the converter will serialize a fallback object that contains the type name of the original object.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeValueConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeValueConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.SafeValueConverterFactory">
            <summary>
            A JSON converter factory that creates <see cref="T:Elsa.Workflows.Serialization.Converters.SafeValueConverterFactory"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeValueConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.SafeValueConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.TypeJsonConverter">
            <summary>
            Serializes <see cref="T:System.Type"/> objects to a simple alias representing the type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.TypeJsonConverter.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.TypeJsonConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.TypeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.TypeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.VariableConverter">
            <summary>
            Serializes <see cref="T:System.Type"/> objects to a simple alias representing said type.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverter.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Services.VariableMapper})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverter.Write(System.Text.Json.Utf8JsonWriter,Elsa.Workflows.Memory.Variable,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Converters.VariableConverterFactory">
            <summary>
            Produces <see cref="T:Elsa.Workflows.Serialization.Converters.VariableConverter"/> instances for <see cref="T:Elsa.Workflows.Memory.Variable"/> and <see cref="T:Elsa.Workflows.Memory.Variable`1"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverterFactory.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry,Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverterFactory.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Converters.VariableConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.ReferenceHandlers.CrossScopedReferenceHandler">
            <summary>
            A reference handler that can be used to resolve references across scopes.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CrossScopedReferenceHandler.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CrossScopedReferenceHandler.CreateResolver">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CrossScopedReferenceHandler.Reset">
            <summary>
            Resets the reference resolver.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CrossScopedReferenceHandler.GetResolver">
            <summary>
            Gets the reference resolver.
            </summary>
            <returns>The reference resolver.</returns>
        </member>
        <member name="T:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver">
            <summary>
            A custom reference resolver that uses a <see cref="T:System.Collections.Generic.ReferenceEqualityComparer"/> to compare objects.
            </summary>
            <remarks>We only need this class because the built-in <c>PreserveReferenceResolver"</c> is internal</remarks>
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver.AddReference(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver.TryAddReference(System.String,System.Object)">
            <summary>
            Tries to add a reference.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver.GetReference(System.Object,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver.ResolveReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.ReferenceHandlers.CustomPreserveReferenceResolver.HasReference(System.Object)">
            <summary>
            Determines whether the specified value has a reference.
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if the specified value has a reference; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.ApiSerializer">
            <inheritdoc cref="T:Elsa.Workflows.Contracts.IApiSerializer" />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Serializers.ApiSerializer"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.Deserialize(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.ApiSerializer.AddConverters(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer.Deserialize(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.BookmarkPayloadSerializer.Serialize``1(``0)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer">
            <inheritdoc cref="T:Elsa.Workflows.Contracts.IActivitySerializer" />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.#ctor(System.IServiceProvider)">
            <inheritdoc cref="T:Elsa.Workflows.Contracts.IActivitySerializer" />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.Serialize(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.Deserialize(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.Deserialize(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonActivitySerializer.AddConverters(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer">
            <summary>
            Serializes simple DTOs from and to JSON.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.SerializeToElement(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.Deserialize(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.Deserialize(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonPayloadSerializer.Deserialize``1(System.Text.Json.JsonElement)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer">
            <summary>
            Serializes and deserializes workflow states from and to JSON.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.#ctor(System.IServiceProvider,Elsa.Expressions.Contracts.IWellKnownTypeRegistry,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.SerializeAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.SerializeToUtfBytesAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.SerializeToElementAsync(Elsa.Workflows.State.WorkflowState,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.DeserializeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.DeserializeAsync(System.Text.Json.JsonElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.GetOptions">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.JsonWorkflowStateSerializer.AddConverters(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.SafeSerializer">
            <inheritdoc cref="T:Elsa.Workflows.Contracts.ISafeSerializer" />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.#ctor(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.SerializeAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.SerializeToElementAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.DeserializeAsync``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.DeserializeAsync``1(System.Text.Json.JsonElement,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SafeSerializer.AddConverters(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Serialization.Serializers.SerializationOptionsConfigurator">
            <summary>
            Configures the JSON serialization options with support for serializing and deserializing activities and expressions.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SerializationOptionsConfigurator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Serialization.Serializers.SerializationOptionsConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Serialization.Serializers.SerializationOptionsConfigurator.Configure(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityDescriber">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.#ctor(Elsa.Workflows.Contracts.IPropertyDefaultValueResolver,Elsa.Workflows.Contracts.IActivityFactory,Elsa.Workflows.Contracts.IPropertyUIHandlerResolver)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.DescribeActivityAsync(System.Type,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.GetInputProperties(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.GetOutputProperties(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.DescribeOutputPropertyAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.DescribeInputPropertyAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.DescribeInputPropertiesAsync(System.Type,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityDescriber.DescribeOutputPropertiesAsync(System.Type,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityFactory">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityFactory.Create(System.Type,Elsa.Workflows.Models.ActivityConstructorContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityInvoker">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityInvoker.#ctor(Elsa.Workflows.Contracts.IActivityExecutionPipeline)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityInvoker.InvokeAsync(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Options.ActivityInvocationOptions)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityInvoker.InvokeAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityRegistry">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.#ctor(Elsa.Workflows.Contracts.IActivityDescriber,System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IActivityDescriptorModifier},Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Services.ActivityRegistry})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Services.ActivityRegistry"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Add(System.Type,Elsa.Workflows.Models.ActivityDescriptor)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.AddMany(System.Type,System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityDescriptor})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Clear">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.ClearProvider(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.ListAll">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.ListByProvider(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Find(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Find(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Find(System.Func{Elsa.Workflows.Models.ActivityDescriptor,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.FindMany(System.Func{Elsa.Workflows.Models.ActivityDescriptor,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.Register(Elsa.Workflows.Models.ActivityDescriptor)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.RegisterAsync(System.Type,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.RegisterAsync(System.Collections.Generic.IEnumerable{System.Type},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityRegistry.GetDescriptorsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityVisitor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityVisitor.#ctor(System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IActivityResolver},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Services.ActivityVisitor"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.ActivityVisitor.VisitAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.BookmarkHasher">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.BookmarkHasher.#ctor(Elsa.Workflows.Contracts.IHasher)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.BookmarkHasher.Hash(System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.DefaultIncidentStrategyResolver">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.DefaultIncidentStrategyResolver.#ctor(Microsoft.Extensions.Options.IOptions{Elsa.Workflows.Options.IncidentOptions},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Services.DefaultIncidentStrategyResolver"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.DefaultIncidentStrategyResolver.ResolveStrategyAsync(Elsa.Workflows.ActivityExecutionContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ExecuteActivityDelegate">
            <summary>
            A delegate that executes an activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Services.ActivityCompletionCallback">
            <summary>
            A delegate that executes an activity when its child activities have completed.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Services.GuidIdentityGenerator">
            <summary>
            Generates a unique identifier using <see cref="T:System.Guid"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.GuidIdentityGenerator.GenerateId">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.Hasher">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.Hasher.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Services.Hasher"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.Hasher.Hash(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.Hasher.Hash(System.Object[])">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.IdentityGraphService">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.#ctor(Elsa.Workflows.Contracts.IActivityVisitor,Elsa.Workflows.Contracts.IActivityRegistry)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignIdentitiesAsync(Elsa.Workflows.Activities.Workflow,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignIdentitiesAsync(Elsa.Workflows.Contracts.IActivity,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignIdentities(Elsa.Workflows.Models.ActivityNode)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignIdentities(System.Collections.Generic.ICollection{Elsa.Workflows.Models.ActivityNode})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignInputOutputs(Elsa.Workflows.Contracts.IActivity)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.IdentityGraphService.AssignVariables(Elsa.Workflows.Contracts.IVariableContainer)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.MemoryStorageDriver">
            <summary>
            A storage driver that stores objects in memory.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.MemoryStorageDriver.WriteAsync(System.String,System.Object,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.MemoryStorageDriver.ReadAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.MemoryStorageDriver.DeleteAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.PropertyDefaultValueResolver">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.PropertyDefaultValueResolver.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.PropertyDefaultValueResolver.GetDefaultValue(System.Reflection.PropertyInfo)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.PropertyUIHandlerResolver">
            <inheritdoc /> 
        </member>
        <member name="M:Elsa.Workflows.Services.PropertyUIHandlerResolver.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <inheritdoc /> 
        </member>
        <member name="M:Elsa.Workflows.Services.PropertyUIHandlerResolver.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <inheritdoc /> 
        </member>
        <member name="T:Elsa.Workflows.Services.QueueBasedActivityScheduler">
            <summary>
            A FIFO queue based activity scheduler.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Services.QueueBasedActivityScheduler.HasAny">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.Schedule(Elsa.Workflows.Models.ActivityWorkItem)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.Take">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.List">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.Any(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.Find(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.QueueBasedActivityScheduler.Clear">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.RandomLongIdentityGenerator">
            <summary>
            Generates a unique identifier using a random long value.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.RandomLongIdentityGenerator.GenerateId">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.ShortGuidIdentityGenerator">
            <summary>
            Generates a unique identifier using <see cref="T:DEDrake.ShortGuid"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.ShortGuidIdentityGenerator.GenerateId">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.StackBasedActivityScheduler">
            <summary>
            A LIFO stack based activity scheduler.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Services.StackBasedActivityScheduler.HasAny">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.Schedule(Elsa.Workflows.Models.ActivityWorkItem)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.Take">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.List">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.Any(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.Find(System.Func{Elsa.Workflows.Models.ActivityWorkItem,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StackBasedActivityScheduler.Clear">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.StorageDriverManager">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StorageDriverManager.#ctor(System.Collections.Generic.IEnumerable{Elsa.Workflows.Contracts.IStorageDriver})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.StorageDriverManager.Get(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.StorageDriverManager.List">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.VariableMapper">
            <summary>
            Maps variables to and from <see cref="T:Elsa.Workflows.Models.VariableModel"/> instances.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.VariableMapper.#ctor(Elsa.Expressions.Contracts.IWellKnownTypeRegistry,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Services.VariableMapper})">
            <summary>
            Initializes a new instance of the <see cref="T:Elsa.Workflows.Services.VariableMapper"/> class.
            </summary>
            <param name="wellKnownTypeRegistry">The well-known type registry.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Elsa.Workflows.Services.VariableMapper.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.VariableMapper.Map(Elsa.Workflows.Models.VariableModel)">
            <summary>
            Maps a <see cref="T:Elsa.Workflows.Memory.Variable"/> to a <see cref="T:Elsa.Workflows.Models.VariableModel"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.VariableMapper.Map(Elsa.Workflows.Memory.Variable)">
            <summary>
            Maps a <see cref="T:Elsa.Workflows.Models.VariableModel"/> to a <see cref="T:Elsa.Workflows.Memory.Variable"/>.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Services.VariablePersistenceManager">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.VariablePersistenceManager.#ctor(Elsa.Workflows.Contracts.IStorageDriverManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.VariablePersistenceManager.LoadVariablesAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.VariablePersistenceManager.SaveVariablesAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.VariablePersistenceManager.DeleteVariablesAsync(Elsa.Workflows.ActivityExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.WorkflowGraphBuilder">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowGraphBuilder.#ctor(Elsa.Workflows.Contracts.IActivityVisitor,Elsa.Workflows.Contracts.IIdentityGraphService,System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowGraphBuilder.BuildAsync(Elsa.Workflows.Activities.Workflow,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.WorkflowRunner">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.#ctor(System.IServiceProvider,Elsa.Workflows.Contracts.IWorkflowExecutionPipeline,Elsa.Workflows.Contracts.IWorkflowStateExtractor,Elsa.Workflows.Contracts.IWorkflowBuilderFactory,Elsa.Workflows.Contracts.IWorkflowGraphBuilder,Elsa.Workflows.Contracts.IIdentityGenerator,Elsa.Mediator.Contracts.INotificationSender,Microsoft.Extensions.Logging.ILogger{Elsa.Workflows.Services.WorkflowRunner})">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Contracts.IWorkflow,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync``1(Elsa.Workflows.WorkflowBase{``0},Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync``1(Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync``2(Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Models.WorkflowGraph,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Activities.Workflow,Elsa.Workflows.State.WorkflowState,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.Models.WorkflowGraph,Elsa.Workflows.State.WorkflowState,Elsa.Workflows.Options.RunWorkflowOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowRunner.RunAsync(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.WorkflowStateExtractor">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowStateExtractor.Extract(Elsa.Workflows.WorkflowExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowStateExtractor.Apply(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.State.WorkflowState)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Services.WorkflowStorageDriver">
            <summary>
            A storage driver that stores objects in the workflow state itself.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.Services.WorkflowStorageDriver.VariablesDictionaryStateKey">
            <summary>
            The key used to store the variables in the workflow state.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowStorageDriver.WriteAsync(System.String,System.Object,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowStorageDriver.ReadAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.Services.WorkflowStorageDriver.DeleteAsync(System.String,Elsa.Workflows.StorageDriverContext)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.Signals.ActivityCompleted">
            <summary>
            Signaled when an activity has completed.
            </summary>
            <param name="Result">An optional result.</param>
        </member>
        <member name="M:Elsa.Workflows.Signals.ActivityCompleted.#ctor(System.Object)">
            <summary>
            Signaled when an activity has completed.
            </summary>
            <param name="Result">An optional result.</param>
        </member>
        <member name="P:Elsa.Workflows.Signals.ActivityCompleted.Result">
            <summary>An optional result.</summary>
        </member>
        <member name="T:Elsa.Workflows.Signals.CompleteCompositeSignal">
            <summary>
            Sent by child activities to notify their composite container that it should complete.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Signals.CompleteCompositeSignal.#ctor(System.Object)">
            <summary>
            Sent by child activities to notify their composite container that it should complete.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.Signals.ScheduleActivityOutcomes">
            <summary>
            Signaled when an activity requests the scheduling of the specified set of outcomes.
            </summary>
            <param name="Outcomes">The outcomes to schedule.</param>
        </member>
        <member name="M:Elsa.Workflows.Signals.ScheduleActivityOutcomes.#ctor(System.String[])">
            <summary>
            Signaled when an activity requests the scheduling of the specified set of outcomes.
            </summary>
            <param name="Outcomes">The outcomes to schedule.</param>
        </member>
        <member name="P:Elsa.Workflows.Signals.ScheduleActivityOutcomes.Outcomes">
            <summary>The outcomes to schedule.</summary>
        </member>
        <member name="T:Elsa.Workflows.Signals.ScheduleChildActivity">
            <summary>
            Signaled when the scheduling of a child activity was requested.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.Signals.ScheduleChildActivity.#ctor(Elsa.Workflows.Contracts.IActivity,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Signaled when the scheduling of a child activity was requested.
            </summary>
            <param name="activity">The child activity to schedule.</param>
            <param name="input">Input to pass to the child activity.</param>
        </member>
        <member name="M:Elsa.Workflows.Signals.ScheduleChildActivity.#ctor(Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Signaled when the scheduling of a child activity was requested.
            </summary>
            <param name="activityExecutionContext">The child activity execution context to schedule.</param>
            <param name="input">The scheduling options.</param>
        </member>
        <member name="P:Elsa.Workflows.Signals.ScheduleChildActivity.Activity">
            <summary>The child activity to schedule.</summary>
        </member>
        <member name="P:Elsa.Workflows.Signals.ScheduleChildActivity.Input">
            <summary>
            Input to pass to the child activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.Signals.ScheduleChildActivity.ActivityExecutionContext">
            <summary>
            The child activity execution context to schedule.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.State.ActivityExecutionContextState">
            <summary>
            A serializable shape of <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.ActivityExecutionContextState.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.Id">
            <summary>
            The ID of the activity instance.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.ParentContextId">
            <summary>
            The ID of the parent of the activity instance.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.ScheduledActivityNodeId">
            <summary>
            The node ID of the scheduled activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.OwnerActivityNodeId">
            <summary>
            The node ID of the activity that owns the scheduled activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.Properties">
            <summary>
            A bag of properties.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.ActivityState">
            <summary>
            The evaluated values of the activity's properties.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.DynamicVariables">
            <summary>
            A list of dynamically created variables.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.Status">
            <summary>
            The status of the activity.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.StartedAt">
            <summary>
            The time at which the activity execution began.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.CompletedAt">
            <summary>
            The time at which the activity execution completed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityExecutionContextState.Tag">
            <summary>
            An optional tag to associate with the activity execution.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.State.ActivityWorkItemState">
            <summary>
            A serialized representation of an activity work item.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.ActivityNodeId">
            <summary>
            The ID of the activity to be executed.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.OwnerContextId">
            <summary>
            The ID of the parent activity execution context, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.Tag">
            <summary>
            A tag that can be used to identify the work item.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.Variables">
            <summary>
            A set of variables to be created as part of the activity execution context, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.ExistingActivityExecutionContextId">
            <summary>
            The ID of an existing activity execution context to schedule, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.ActivityWorkItemState.Input">
            <summary>
            Optional input to pass to the activity.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.State.CompletionCallbackState">
            <summary>
            Represents a serializable completion callback that is registered by an activity.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.CompletionCallbackState.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Elsa.Workflows.State.CompletionCallbackState"/> class.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.CompletionCallbackState.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Elsa.Workflows.State.CompletionCallbackState"/> class.
            </summary>
            <param name="ownerInstanceId">The ID of the activity instance that registered the callback.</param>
            <param name="childNodeId">The ID of the child node that the callback is registered for.</param>
            <param name="methodName">The name of the method to invoke when the child node completes.</param>
            <param name="tag">An optional tag.</param>
        </member>
        <member name="P:Elsa.Workflows.State.CompletionCallbackState.OwnerInstanceId">
            <summary>
            Gets the ID of the activity instance that registered the callback.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.CompletionCallbackState.ChildNodeId">
            <summary>
            Gets the ID of the child node that the callback is registered for.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.CompletionCallbackState.MethodName">
            <summary>
            Gets the name of the method to invoke when the child node completes.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.CompletionCallbackState.Tag">
            <summary>
            Gets the tag.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.State.ExceptionState">
            <summary>
            A simplified, serializable model representing an exception.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.ExceptionState.#ctor(System.Type,System.String,System.String,Elsa.Workflows.State.ExceptionState)">
            <summary>
            A simplified, serializable model representing an exception.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.ExceptionState.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Elsa.Workflows.State.ExceptionState.FromException(System.Exception)">
            <summary>
            Creates a new <see cref="T:Elsa.Workflows.State.ExceptionState"/> from the specified exception. 
            </summary>
        </member>
        <member name="T:Elsa.Workflows.State.WorkflowState">
            <summary>
            Represents the current state of a workflow. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Id">
            <summary>
            Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.DefinitionId">
            <summary>
            The workflow definition ID.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.DefinitionVersionId">
            <summary>
            The workflow definition version ID.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.DefinitionVersion">
            <summary>
            The workflow definition version.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.ParentWorkflowInstanceId">
            <summary>
            The ID of the parent workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.CorrelationId">
            <summary>
            The correlation ID of the workflow, if any.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Status">
            <summary>
            The status of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.SubStatus">
            <summary>
            The sub status of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Bookmarks">
            <summary>
            Collected bookmarks.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Incidents">
            <summary>
            A collection of incidents that may have occurred during execution.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.IsSystem">
            <summary>
            Gets or sets the value indicating whether the workflow is a system workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.CompletionCallbacks">
            <summary>
            A list of callbacks that activities registered in order to be notified when the activities they scheduled complete. 
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.ActivityExecutionContexts">
            <summary>
            A flattened list of <see cref="T:Elsa.Workflows.State.ActivityExecutionContextState"/> objects, representing the various active "call stacks" of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.ScheduledActivities">
            <summary>
            A list of scheduled activities.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.ExecutionLogSequence">
            <summary>
            The current execution log sequence number.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Input">
            <summary>
            A dictionary of inputs sent to the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Output">
            <summary>
            A dictionary of outputs produced by the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.Properties">
            <summary>
            A global property bag that contains properties set by application code and/or activities.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.CreatedAt">
            <summary>
            The created time of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.UpdatedAt">
            <summary>
            The last updated time of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.State.WorkflowState.FinishedAt">
            <summary>
            The finished time of the workflow.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.CheckList.CheckListProps.CheckList">
            <summary>
            The select list.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.CheckList.CheckListUIHintHandler">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.UIHints.CheckList.CheckListUIHintHandler.UIHint">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.UIHints.CheckList.CheckListUIHintHandler.GetPropertyUIHandlersAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.UIHints.CheckList.StaticCheckListOptionsProvider">
            <summary>
            Provides static drop-down options for a given property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.UIHints.CheckList.StaticCheckListOptionsProvider.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptions">
            <summary>
            Options for the code editor component.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptions.EditorHeight">
            <summary>The height of the editor.</summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptions.Language">
            <summary>The language to use for syntax highlighting.</summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptions.SingleLineMode">
            <summary>Whether the editor should be in single line mode.</summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptionsProviderBase">
            <summary>
            Provides options for the code editor component.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptionsProviderBase.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptionsProviderBase.GetCodeEditorOptions(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Returns an object containing properties that will be used to render the UI for the property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.UIHints.CodeEditor.CodeEditorOptionsProviderBase.GetLanguage(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Returns the language to use for syntax highlighting.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.CodeEditor.EditorHeight">
            <summary>
            Height options for the code editor component.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.UIHints.CodeEditor.EditorHeight.Default">
            <summary>
            The default height.
            </summary>
        </member>
        <member name="F:Elsa.Workflows.UIHints.CodeEditor.EditorHeight.Large">
            <summary>
            A large height.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.CodeEditor.MultiLineOptions">
            <summary>
            Options for the multi-line editor component.
            </summary>
            <param name="EditorHeight">The height of the editor.</param>
        </member>
        <member name="M:Elsa.Workflows.UIHints.CodeEditor.MultiLineOptions.#ctor(Elsa.Workflows.UIHints.CodeEditor.EditorHeight)">
            <summary>
            Options for the multi-line editor component.
            </summary>
            <param name="EditorHeight">The height of the editor.</param>
        </member>
        <member name="P:Elsa.Workflows.UIHints.CodeEditor.MultiLineOptions.EditorHeight">
            <summary>The height of the editor.</summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.Dropdown.DropDownOptionsProviderBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Elsa.Workflows.UIHints.Dropdown.DropDownOptionsProviderBase.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.UIHints.Dropdown.DropDownOptionsProviderBase.GetItemsAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <summary>
            Implement this to provide items to the dropdown list.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.Dropdown.DropDownProps">
            <summary>
            Provides properties for the <see cref="F:Elsa.Workflows.UIHints.InputUIHints.DropDown"/> UI hint.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.Dropdown.DropDownProps.SelectList">
            <summary>
            The select list.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.Dropdown.DropDownProps.ProviderName">
            <summary>
            The name of the provider that will provide the select list.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.Dropdown.DropDownUIHintHandler">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.UIHints.Dropdown.DropDownUIHintHandler.UIHint">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.UIHints.Dropdown.DropDownUIHintHandler.GetPropertyUIHandlersAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.UIHints.Dropdown.SelectList">
            <summary>
            Represents a list of select list items.
            </summary>
            <param name="Items">The items.</param>
        </member>
        <member name="M:Elsa.Workflows.UIHints.Dropdown.SelectList.#ctor(System.Collections.Generic.ICollection{Elsa.Workflows.UIHints.Dropdown.SelectListItem})">
            <summary>
            Represents a list of select list items.
            </summary>
            <param name="Items">The items.</param>
        </member>
        <member name="P:Elsa.Workflows.UIHints.Dropdown.SelectList.Items">
            <summary>The items.</summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.Dropdown.StaticDropDownOptionsProvider">
            <summary>
            Provides static drop-down options for a given property.
            </summary>
        </member>
        <member name="M:Elsa.Workflows.UIHints.Dropdown.StaticDropDownOptionsProvider.GetUIPropertiesAsync(System.Reflection.PropertyInfo,System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.UIHints.InputUIHints">
            <summary>
            Provides a set of well-known UI hints.
            </summary>
        </member>
        <member name="T:Elsa.Workflows.UIHints.JsonEditor.JsonEditorUIHintHandler">
            <inheritdoc />
        </member>
        <member name="P:Elsa.Workflows.UIHints.JsonEditor.JsonEditorUIHintHandler.UIHint">
            <inheritdoc />
        </member>
        <member name="M:Elsa.Workflows.UIHints.JsonEditor.JsonEditorUIHintHandler.GetPropertyUIHandlersAsync(System.Reflection.PropertyInfo,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Elsa.Workflows.UIHints.SingleLine.SingleLineProps">
            <summary>
            Provides additional options for the SingleLine input field.
            </summary>
        </member>
        <member name="P:Elsa.Workflows.UIHints.SingleLine.SingleLineProps.AdornmentText">
            <summary>
            Gets or sets adornment text.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ActivityDescriptorExtensions">
            <summary>
            Provides extensions for <see cref="T:Elsa.Workflows.Models.ActivityDescriptor"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetAttribute``1(Elsa.Workflows.Models.ActivityDescriptor)">
            <summary>
            Returns the specified attribute from the activity descriptor.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetWrappedInputPropertyDescriptors(Elsa.Workflows.Models.ActivityDescriptor,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns each wrapped input from the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetNakedInputPropertyDescriptors(Elsa.Workflows.Models.ActivityDescriptor,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns each naked input from the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetWrappedInputProperties(Elsa.Workflows.Models.ActivityDescriptor,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Returns each input from the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetWrappedInputPropertyDescriptor(Elsa.Workflows.Models.ActivityDescriptor,Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Returns each input descriptor from the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityDescriptorExtensions.GetWrappedInputProperty(Elsa.Workflows.Models.ActivityDescriptor,Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Returns each input from the specified activity.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ActivityExecutionContextExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.TryGetWorkflowInput``1(Elsa.Workflows.ActivityExecutionContext,System.String,``0@,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Attempts to get a value from the input provided via <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>. If a value was found, an attempt is made to convert it into the specified type <code>T</code>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetWorkflowInput``1(Elsa.Workflows.ActivityExecutionContext,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Gets a value from the input provided via <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>. If a value was found, an attempt is made to convert it into the specified type <code>T</code>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetWorkflowInput``1(Elsa.Workflows.ActivityExecutionContext,System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Gets a value from the input provided via <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/>. If a value was found, an attempt is made to convert it into the specified type <code>T</code>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.SetResult(Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Sets the Result property of the specified activity.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/></param> being extended.
            <param name="value">The value to set.</param>
            <exception cref="T:System.Exception">Thrown when the specified activity does not implement <see cref="T:Elsa.Workflows.Contracts.IActivityWithResult"/>.</exception>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.IsTriggerOfWorkflow(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns true if this activity is triggered for the first time and not being resumed.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.CreateVariable(Elsa.Workflows.ActivityExecutionContext,System.String,System.Object,System.Type,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Creates a workflow variable by name and optionally sets the value.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
            <param name="name">The name of the variable.</param>
            <param name="value">The value of the variable.</param>
            <param name="storageDriverType">The type of storage driver to use for the variable.</param>
            <param name="configure">A callback to configure the memory block.</param>
            <returns>The created <see cref="T:Elsa.Workflows.Memory.Variable"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.SetVariable(Elsa.Workflows.ActivityExecutionContext,System.String,System.Object,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Sets a workflow variable by name.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
            <param name="name">The name of the variable.</param>
            <param name="value">The value of the variable.</param>
            <param name="configure">A callback to configure the memory block.</param>
            <returns>The created <see cref="T:Elsa.Workflows.Memory.Variable"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetVariable``1(Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Gets a workflow variable by name.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
            <param name="name">The name of the variable.</param>
            <typeparam name="T">The type of the variable.</typeparam>
            <returns>The variable if found, otherwise null.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetVariableValues(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a dictionary of variable keys and their values across scopes.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.EvaluateInputPropertiesAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Evaluates each input property of the activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.EvaluateInputPropertyAsync``2(Elsa.Workflows.ActivityExecutionContext,System.Linq.Expressions.Expression{System.Func{``0,Elsa.Workflows.Models.Input{``1}}})">
            <summary>
            Evaluates the specified input property of the activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.EvaluateInputPropertyAsync(Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Evaluates a specific input property of the activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetActivitiesWithOutputs(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a set of tuples containing the activity and its descriptor for all activities with outputs.
            </summary>
            <param name="activityExecutionContext">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetActivitiesWithOutputs(System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.ActivityNode},Elsa.Workflows.Contracts.IActivityRegistry)">
            <summary>
            Returns a set of tuples containing the activity and its descriptor for all activities with outputs.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.FindActivityByIdOrName(Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Returns the activity with the specified ID or name.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetOutcomeName(Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Returns the outcome name for the specified port property name.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
            <param name="portPropertyName">The name of the port property.</param>
            <returns>The outcome name.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.EvaluateAsync``1(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Models.Input{``0})">
            <summary>
            Evaluates the specified input and sets the result in the activity execution context's memory space.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> being extended.</param>
            <param name="input">The input to evaluate.</param>
            <typeparam name="T">The type of the input.</typeparam>
            <returns>The evaluated value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetAncestors(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a flattened list of the current context's ancestors.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetDescendents(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a flattened list of the current context's descendants.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetActiveChildren(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a flattened list of the current context's immediate active children.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetChildren(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a flattened list of the current context's immediate children.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.GetDescendants(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns a flattened list of the current context's descendants.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.SendSignalAsync(Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Send a signal up the current hierarchy of ancestors.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.ScheduleOutcomesAsync(Elsa.Workflows.ActivityExecutionContext,System.String[])">
            <summary>
            Complete the current activity. This should only be called by activities that explicitly suppress automatic-completion.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.CancelActivityAsync(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Cancel the activity. For blocking activities, it means their bookmarks will be removed. For job activities, the background work will be cancelled.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.FindParentWithVariableContainer(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Returns the first context that is associated with a <see cref="T:Elsa.Workflows.Contracts.IVariableContainer"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExecutionContextExtensions.FindParent(Elsa.Workflows.ActivityExecutionContext,System.Func{Elsa.Workflows.ActivityExecutionContext,System.Boolean})">
            <summary>
            Returns the first context in the hierarchy that matches the specified predicate.
            </summary>
            <param name="context">The context to start searching from.</param>
            <param name="predicate">The predicate to match.</param>
            <returns>The first context that matches the predicate or <c>null</c> if no match was found.</returns>
        </member>
        <member name="T:Elsa.Extensions.ActivityExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.Contracts.IActivity"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetNamedInputs(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the input properties of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetInputs(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the input properties of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetInput(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Gets the input with the specified name.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutputs(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the output properties of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity to get the output from.</param>
            <param name="context">The activity execution context.</param>
            <param name="outputName">Name of the output.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput(Elsa.Workflows.Contracts.IActivity,Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity to get the output from.</param>
            <param name="context">The expression execution context.</param>
            <param name="outputName">Name of the output.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput``1(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <param name="outputName">Name of the output.</param>
            <typeparam name="T">The type of the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput``1(Elsa.Workflows.Contracts.IActivity,Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <param name="outputName">Name of the output.</param>
            <typeparam name="T">The type of the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput``2(``0,Elsa.Workflows.ActivityExecutionContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <param name="outputExpression">The output expression.</param>
            <typeparam name="TActivity">The type of the activity.</typeparam>
            <typeparam name="T">The type of the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetOutput``2(``0,Elsa.Expressions.Models.ExpressionExecutionContext,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Gets the output with the specified name.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <param name="outputExpression">The output expression.</param>
            <typeparam name="TActivity">The type of the activity.</typeparam>
            <typeparam name="T">The type of the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetResult``1(Elsa.Workflows.Contracts.IActivity,Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets the Result output of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <typeparam name="T">The type as which to return the output.</typeparam>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetResult(Elsa.Workflows.Contracts.IActivity,Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets the Result output of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetResult(Elsa.Workflows.Contracts.IActivity,Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the Result output of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="context">The context.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetResult(Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the Result output of the specified activity.
            </summary>
            <param name="context">The context.</param>
            <param name="activity">The activity.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetLastResult``1(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets the result of the last activity.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetLastResult(Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the result of the last activity.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetLastResult(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Gets the result of the last activity.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetInputProperties(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the input properties of the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetDelegate``1(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Gets the method for the specified method name on the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetResumeActivityDelegate(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Gets the Resume method for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityExtensions.GetActivityCompletionCallback(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Gets the Child Activity Completed method for the specified activity.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ActivityNodeExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.Models.ActivityNode"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityNodeExtensions.Flatten(Elsa.Workflows.Models.ActivityNode)">
            <summary>
            Returns a flattened list of the specified node and all its descendants.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ActivityPropertyExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.Contracts.IActivity"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.GetCanStartWorkflow(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets a flag indicating whether this activity can be used for starting a workflow.
            Usually used for triggers, but also used to disambiguate between two or more starting activities and no starting activity was specified.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetCanStartWorkflow(Elsa.Workflows.Contracts.IActivity,System.Boolean)">
            <summary>
            Sets a flag indicating whether this activity can be used for starting a workflow.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.GetRunAsynchronously(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets a flag indicating if this activity should execute synchronously or asynchronously.
            By default, activities with an <see cref="T:Elsa.Workflows.ActivityKind"/> of <see cref="T:System.Action"/>, <see cref="T:System.Threading.Tasks.Task"/> or <see cref="T:Elsa.Workflows.Trigger"/>
            will execute synchronously, while activities of the <see cref="F:Elsa.Workflows.ActivityKind.Job"/> kind will execute asynchronously.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetRunAsynchronously(Elsa.Workflows.Contracts.IActivity,System.Boolean)">
            <summary>
            Sets a flag indicating if this activity should execute synchronously or asynchronously.
            By default, activities with an <see cref="T:Elsa.Workflows.ActivityKind"/> of <see cref="T:System.Action"/>, <see cref="T:System.Threading.Tasks.Task"/> or <see cref="T:Elsa.Workflows.Trigger"/>
            will execute synchronously, while activities of the <see cref="F:Elsa.Workflows.ActivityKind.Job"/> kind will execute asynchronously.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.GetSource(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the source file and line number where this activity was instantiated, if any.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetSource(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Sets the source file and line number where this activity was instantiated, if any.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetSource(Elsa.Workflows.Contracts.IActivity,System.String,System.Nullable{System.Int32})">
            <summary>
            Sets the source file and line number where this activity was instantiated, if any.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.GetDisplayText(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the display text for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetDisplayText(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Sets the display text for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.GetDescription(Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Gets the description for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityPropertyExtensions.SetDescription(Elsa.Workflows.Contracts.IActivity,System.String)">
            <summary>
            Sets the description for the specified activity.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ActivityRegistryExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.Contracts.IActivityRegistry"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityRegistryExtensions.Find(Elsa.Workflows.Contracts.IActivityRegistry,Elsa.Workflows.Contracts.IActivity)">
            <summary>
            Finds the activity descriptor for the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityRegistryExtensions.Find``1(Elsa.Workflows.Contracts.IActivityRegistry)">
            <summary>
            Finds the activity descriptor for the specified activity type.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ActivityRegistryExtensions.RegisterAsync``1(Elsa.Workflows.Contracts.IActivityRegistry,System.Threading.CancellationToken)">
            <summary>
            Registers the specified activity type with the registry.
            </summary>
            <param name="activityRegistry">The activity registry.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <typeparam name="T">The type of the activity to register.</typeparam>
        </member>
        <member name="T:Elsa.Extensions.BookmarkExtensions">
            <summary>
            Adds extensions to <c>Bookmark</c> and sets thereof.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.BookmarkExtensions.Filter``1(System.Collections.Generic.IEnumerable{Elsa.Workflows.Models.Bookmark})">
            <summary>
            Filters the specified set of bookmarks by the specified activity type.
            </summary>
            <param name="bookmarks">The set of bookmarks to filter.</param>
            <typeparam name="T">The activity type to filter by.</typeparam>
            <returns>The filtered set of bookmarks.</returns>
        </member>
        <member name="M:Elsa.Extensions.BookmarkExtensions.GetPayload``1(Elsa.Workflows.Models.Bookmark)">
            <summary>
            Returns the Data property of the bookmark as a strongly-typed object.
            </summary>
            <param name="bookmark">The bookmark.</param>
            <typeparam name="T">The type of the Data property.</typeparam>
            <returns>The Data property of the bookmark as a strongly-typed object.</returns>
        </member>
        <member name="M:Elsa.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Merges the specified dictionary with the other dictionary.
            When a key exists in both dictionaries, the value in the other dictionary will overwrite the value in the specified dictionary.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ExpressionEvaluatorExtensions">
            <summary>
            Contains extension methods for <see cref="T:Elsa.Expressions.Contracts.IExpressionEvaluator"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionEvaluatorExtensions.EvaluateAsync``1(Elsa.Expressions.Contracts.IExpressionEvaluator,Elsa.Workflows.Models.Input{``0},Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Expressions.Models.ExpressionEvaluatorOptions)">
            <summary>
            Evaluates the specified expression and returns the result.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionEvaluatorExtensions.EvaluateAsync(Elsa.Expressions.Contracts.IExpressionEvaluator,Elsa.Workflows.Models.Input,Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Expressions.Models.ExpressionEvaluatorOptions)">
            <summary>
            Evaluates the specified expression and returns the result.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.ExpressionExecutionContextExtensions">
            <summary>
            Provides extensions on <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>
            </summary>
        </member>
        <member name="F:Elsa.Extensions.ExpressionExecutionContextExtensions.WorkflowExecutionContextKey">
            <summary>
            The key used to store the <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> in the <see cref="P:Elsa.Expressions.Models.ExpressionExecutionContext.TransientProperties"/> dictionary.
            </summary>
        </member>
        <member name="F:Elsa.Extensions.ExpressionExecutionContextExtensions.ActivityExecutionContextKey">
            <summary>
            The key used to store the <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> in the <see cref="P:Elsa.Expressions.Models.ExpressionExecutionContext.TransientProperties"/> dictionary.
            </summary>
        </member>
        <member name="F:Elsa.Extensions.ExpressionExecutionContextExtensions.InputKey">
            <summary>
            The key used to store the input in the <see cref="P:Elsa.Expressions.Models.ExpressionExecutionContext.TransientProperties"/> dictionary.
            </summary>
        </member>
        <member name="F:Elsa.Extensions.ExpressionExecutionContextExtensions.WorkflowKey">
            <summary>
            The key used to store the workflow in the <see cref="P:Elsa.Expressions.Models.ExpressionExecutionContext.TransientProperties"/> dictionary.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.CreateActivityExecutionContextPropertiesFrom(Elsa.Workflows.WorkflowExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a dictionary for the specified <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> and <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.CreateTriggerIndexingPropertiesFrom(Elsa.Workflows.Activities.Workflow,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a dictionary for the specified <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> and <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.TryGetWorkflowExecutionContext(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.WorkflowExecutionContext@)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.Activities.Workflow"/> of the specified <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetWorkflowExecutionContext(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/> of the specified <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetActivityExecutionContext(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> of the specified <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.TryGetActivityExecutionContext(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.ActivityExecutionContext@)">
            <summary>
            Returns the <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> of the specified <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/> 
            </summary>
            <param name="context"></param>
            <param name="activityExecutionContext"></param>
            <returns></returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.Get``1(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Models.Input{``0})">
            <summary>
            Returns the value of the specified input.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.Get``1(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Models.Output)">
            <summary>
            Returns the value of the specified output.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.Get(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Models.Output)">
            <summary>
            Returns the value of the specified output.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariable``1(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns the value of the variable with the specified name.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariable(Elsa.Expressions.Models.ExpressionExecutionContext,System.String,System.Boolean)">
            <summary>
            Returns the variable with the specified name.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.CreateVariable``1(Elsa.Expressions.Models.ExpressionExecutionContext,System.String,``0,System.Type,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Creates a named variable in the context.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariableContainerContext(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns the first parent context that contains a variable container.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.SetVariable``1(Elsa.Expressions.Models.ExpressionExecutionContext,System.String,``0,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Sets the value of a named variable in the context.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.Set(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Models.Output,System.Object,System.Action{Elsa.Expressions.Models.MemoryBlock})">
            <summary>
            Sets the output to the specified value.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.ReadAndFlattenMemoryBlocks(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns a dictionary of memory block keys and values across scopes.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.FlattenMemoryBlocks(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns a dictionary of memory blocks across scopes.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.FindContextContainingBlock(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns a the first context that contains a memory block with the specified ID.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.FindParent(Elsa.Expressions.Models.ExpressionExecutionContext,System.Func{Elsa.Expressions.Models.ExpressionExecutionContext,System.Boolean})">
            <summary>
            Returns the first context in the hierarchy that matches the specified predicate.
            </summary>
            <param name="context">The context to start searching from.</param>
            <param name="predicate">The predicate to match.</param>
            <returns>The first context that matches the predicate or <c>null</c> if no match was found.</returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariableInScope(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns the value of the specified variable.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariableNamesInScope(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets all variables names in scope.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetVariablesInScope(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets all variables in scope.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.SetVariableInScope(Elsa.Expressions.Models.ExpressionExecutionContext,System.String,System.Object)">
            <summary>
            Sets the value of a named variable in the context.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.EnumerateVariablesInScope(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Enumerates all variables in scope.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetInput``1(Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Models.InputDefinition)">
            <summary>
            Returns the input value associated with the specified <see cref="T:Elsa.Workflows.Models.InputDefinition"/> in the given <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>.
            </summary>
            <typeparam name="T">The type of the input value.</typeparam>
            <param name="context">The <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/> containing the input.</param>
            <param name="inputDefinition">The <see cref="T:Elsa.Workflows.Models.InputDefinition"/> specifying the input to retrieve.</param>
            <returns>The input value associated with the specified <see cref="T:Elsa.Workflows.Models.InputDefinition"/> in the <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetInput``1(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns the value of the specified input.
            </summary>
            <param name="context"></param>
            <param name="name">The name of the input.</param>
            <typeparam name="T">The type of the input.</typeparam>
            <returns>The value of the specified input.</returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetInput(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns the value of the specified input.
            </summary>
            <param name="context"></param>
            <param name="name">The name of the input.</param>
            <returns>The value of the specified input.</returns>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetOutput(Elsa.Expressions.Models.ExpressionExecutionContext,System.String,System.String)">
            <summary>
            Returns the value of the specified input.
            </summary>
            <param name="context"></param>
            <param name="activityIdOrName">The ID or name of the activity.</param>
            <param name="outputName">The name of the output.</param>
            <returns>The value of the specified output.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the activity is not found.</exception>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetActivityOutputs(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns all activity outputs.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.IsInsideCompositeActivity(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns a value indicating whether the current activity is inside a composite activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetLastResult(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns the result of the activity that was executed before the current activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ExpressionExecutionContextExtensions.GetWorkflowInputs(Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Returns all activity inputs.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.InputExtensions">
            <summary>
            Provides extensions on <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/> and <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>
            </summary>
        </member>
        <member name="M:Elsa.Extensions.InputExtensions.GetOrDefault``1(Elsa.Workflows.Models.Input{``0},Elsa.Workflows.ActivityExecutionContext,System.Func{``0})">
            <summary>
            Returns the value of the specified input, or a default value if the input is not found.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.InputExtensions.GetOrDefault``1(Elsa.Workflows.Models.Input{``0},Elsa.Expressions.Models.ExpressionExecutionContext,System.Func{``0})">
            <summary>
            Returns the value of the specified input, or a default value if the input is not found.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.InputExtensions.Get``1(Elsa.Workflows.Models.Input{``0},Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Returns the value of the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="context">The context.</param>
            <param name="inputName">The name of the input.</param>
            <typeparam name="T">The type of the input.</typeparam>
            <returns>The value of the specified input.</returns>
            <exception cref="T:System.Exception">Throws an exception if the input is not found.</exception>
        </member>
        <member name="M:Elsa.Extensions.InputExtensions.Get``1(Elsa.Workflows.Models.Input{``0},Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Returns the value of the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="context">The context.</param>
            <param name="inputName">The name of the input.</param>
            <typeparam name="T">The type of the input.</typeparam>
            <returns>The value of the specified input.</returns>
            <exception cref="T:System.Exception">Throws an exception if the input is not found.</exception>
        </member>
        <member name="M:Elsa.Extensions.JsonElementExtensions.GetProperty(System.Text.Json.JsonElement,System.String[])">
            <summary>
            Returns a child element where its name matches any of the specified names.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.MemoryBlockReferenceExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.Get(Elsa.Expressions.Models.ExpressionExecutionContext,System.String)">
            <summary>
            Gets the value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
            <param name="context">The <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/> to get the value from.</param>
            <param name="blockId">The ID of the memory block to get the value for.</param>
            <returns>The value of the memory reference referenced by the specified <see cref="!:blockId"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.Get(Elsa.Workflows.ActivityExecutionContext,System.String)">
            <summary>
            Gets the value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> to get the value from.</param>
            <param name="blockId">The ID of the memory block to get the value for.</param>
            <returns>The value of the memory reference referenced by the specified <see cref="!:blockId"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.Get(Elsa.Expressions.Models.MemoryBlockReference,Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
            <param name="reference">The <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/> to get the value for.</param>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> to get the value from.</param>
            <returns>The value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.GetBlock(Elsa.Expressions.Models.MemoryBlockReference,Elsa.Expressions.Models.ExpressionExecutionContext)">
            <summary>
            Gets the <see cref="T:Elsa.Expressions.Models.MemoryBlock"/> of referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
            <param name="reference">The reference to get the reference for.</param>
            <param name="context">The <see cref="T:Elsa.Expressions.Models.ExpressionExecutionContext"/> to get the reference from.</param>
            <returns>The <see cref="T:Elsa.Expressions.Models.MemoryBlock"/> referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.Get``1(Elsa.Expressions.Models.MemoryBlockReference,Elsa.Workflows.ActivityExecutionContext)">
            <summary>
            Gets the value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            </summary>
            <param name="reference">The <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/> to get the value for.</param>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> to get the value from.</param>
            <typeparam name="T">The type of the value to get.</typeparam>
            <returns>The value of the memory reference referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.</returns>
        </member>
        <member name="M:Elsa.Extensions.MemoryBlockReferenceExtensions.Set(Elsa.Expressions.Models.MemoryBlockReference,Elsa.Workflows.ActivityExecutionContext,System.Object)">
            <summary>
            Sets the specified value on the memory referenced by the specified <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/>.
            If the referenced block doesn't exist in the current scope, an attempt is made to find the block in the first parent scope that references an activity that is a variable container.
            If that fails, the root scope is used.
            </summary>
            <param name="reference">The <see cref="T:Elsa.Expressions.Models.MemoryBlockReference"/> to set the value for.</param>
            <param name="context">The <see cref="T:Elsa.Workflows.ActivityExecutionContext"/> to set the value on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Elsa.Extensions.ObjectExtensions.ToDictionary(System.Object,System.Reflection.BindingFlags)">
            <summary>
            Converts an object into a dictionary.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.ObjectExtensions.ToReadOnlyDictionary(System.Object,System.Reflection.BindingFlags)">
            <summary>
            Converts an object into a dictionary.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.OutputExtensions">
            <summary>
            Provides a set of helper extensions to <see cref="T:Elsa.Workflows.Models.Output`1"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.OutputExtensions.CreateInput``1(Elsa.Workflows.Models.Output)">
            <summary>
            Creates an input that references the specified output's value.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.OutputExtensions.Set``1(Elsa.Workflows.Models.Output{``0},Elsa.Workflows.ActivityExecutionContext,``0,System.String)">
            <summary>
            Sets the output to the specified value.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.OutputExtensions.Set``1(Elsa.Workflows.Models.Output{``0},Elsa.Expressions.Models.ExpressionExecutionContext,``0)">
            <summary>
            Sets the output to the specified value.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.OutputExtensions.Set``1(Elsa.Workflows.Models.Output{``0},Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Memory.Variable{``0})">
            <summary>
            Sets the output to the specified value.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.OutputExtensions.Set``1(Elsa.Workflows.Models.Output{``0},Elsa.Expressions.Models.ExpressionExecutionContext,Elsa.Workflows.Memory.Variable{``0})">
            <summary>
            Sets the output to the specified value.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.TriggerExtensions">
            <summary>
            Extension methods for <see cref="T:Elsa.Workflows.Trigger"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.TriggerExtensions.Filter``1(System.Collections.Generic.IEnumerable{Elsa.Workflows.Trigger})">
            <summary>
            Returns a filtered list of triggers that match the specified activity type.
            </summary>
            <param name="triggers">The triggers to filter.</param>
            <typeparam name="T">The type of the activity.</typeparam>
        </member>
        <member name="M:Elsa.Extensions.TriggerExtensions.CreateExpressionExecutionContextAsync(Elsa.Workflows.Contracts.ITrigger,System.IServiceProvider,Elsa.Workflows.WorkflowIndexingContext,Elsa.Expressions.Contracts.IExpressionEvaluator,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates an expression execution context for the specified trigger.
            </summary>
            <param name="trigger">The trigger for which to create an expression execution context.</param>
            <param name="serviceProvider">The service provider.</param>
            <param name="context">The workflow indexing context.</param>
            <param name="expressionEvaluator">The expression evaluator.</param>
            <param name="logger">The logger.</param>
            <returns>An expression execution context.</returns>
        </member>
        <member name="T:Elsa.Extensions.VariableCollectionExtensions">
            <summary>
            Adds extension methods to <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableCollectionExtensions.Declare(System.Collections.Generic.ICollection{Elsa.Workflows.Memory.Variable},Elsa.Workflows.Memory.Variable)">
            <summary>
            Adds the specified variable to the collection if it doesn't already exist.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.VariableExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.Memory.Variable"/> for configuring storage.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithWorkflowStorage(Elsa.Workflows.Memory.Variable)">
            <summary>
            Configures the variable to use the <see cref="T:Elsa.Workflows.Services.WorkflowStorageDriver"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithWorkflowStorage``1(Elsa.Workflows.Memory.Variable{``0})">
            <summary>
            Configures the variable to use the <see cref="T:Elsa.Workflows.Services.WorkflowStorageDriver"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithMemoryStorage(Elsa.Workflows.Memory.Variable)">
            <summary>
            Configures the variable to use the <see cref="T:Elsa.Workflows.Services.MemoryStorageDriver"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithMemoryStorage``1(Elsa.Workflows.Memory.Variable{``0})">
            <summary>
            Configures the variable to use the <see cref="T:Elsa.Workflows.Services.MemoryStorageDriver"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithStorage``1(Elsa.Workflows.Memory.Variable)">
            <summary>
            Configures the variable to use the specified <see cref="T:Elsa.Workflows.Contracts.IStorageDriver"/> type.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.WithStorage(Elsa.Workflows.Memory.Variable,System.Type)">
            <summary>
            Configures the variable to use the specified <see cref="T:Elsa.Workflows.Contracts.IStorageDriver"/> type.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.ParseValue(Elsa.Workflows.Memory.Variable,System.Object)">
            <summary>
            Converts the specified value into a type that is compatible with the variable.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.VariableExtensions.GetVariableType(Elsa.Workflows.Memory.Variable)">
            <summary>
            Return the type of the variable.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.WorkflowBuilderExtensions">
            <summary>
            Contains extensions for <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowBuilderExtensions.BuildWorkflowAsync``1(Elsa.Workflows.Contracts.IWorkflowBuilder,System.Threading.CancellationToken)">
            <summary>
            Builds a workflow asynchronously.
            </summary>
            <typeparam name="T">The type of the workflow.</typeparam>
            <param name="builder">The <see cref="T:Elsa.Workflows.Contracts.IWorkflowBuilder"/> instance to build the workflow.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation that returns the built <see cref="T:Elsa.Workflows.Activities.Workflow"/>.</returns>
        </member>
        <member name="T:Elsa.Extensions.WorkflowExecutionContextExtensions">
            <summary>
            Adds extension methods to <see cref="T:Elsa.Workflows.ActivityExecutionContext"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.ScheduleWorkflow(Elsa.Workflows.WorkflowExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Schedules the workflow for execution.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.ScheduleRoot(Elsa.Workflows.WorkflowExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Schedules the root activity of the workflow.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.ScheduleActivity(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.Contracts.IActivity,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Schedules the specified activity of the workflow.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.ScheduleActivityExecutionContext(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.ActivityExecutionContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Schedules the specified activity execution context of the workflow.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.ScheduleBookmark(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.Models.Bookmark,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Schedules the activity of the specified bookmark.
            </summary>
            <returns>The created work item, or <c>null</c> if the specified bookmark doesn't exist in the <see cref="T:Elsa.Workflows.WorkflowExecutionContext"/></returns> 
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.Schedule(Elsa.Workflows.WorkflowExecutionContext,Elsa.Workflows.Models.ActivityNode,Elsa.Workflows.ActivityExecutionContext,Elsa.Workflows.Options.ScheduleWorkOptions)">
            <summary>
            Schedules the specified activity.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExecutionContextExtensions.AllActivitiesCompleted(Elsa.Workflows.WorkflowExecutionContext)">
            <summary>
            Returns true if all activities have completed or canceled, false otherwise.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.WorkflowExtensions">
            <summary>
            Provides extension methods for <see cref="T:Elsa.Workflows.Activities.Workflow"/>.
            </summary>  
        </member>
        <member name="M:Elsa.Extensions.WorkflowExtensions.CreatedWithModernTooling(Elsa.Workflows.Activities.Workflow)">
            <summary>
            Returns a boolean indicating whether the workflow was created with modern tooling.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowExtensions.WhenCreatedWithModernTooling(Elsa.Workflows.Activities.Workflow,System.Action,System.Action)">
            <summary>
            Executes the specified action depending on whether the workflow was created with modern tooling or not.
            </summary>
        </member>
        <member name="T:Elsa.Extensions.WorkflowRunnerExtensions">
            <summary>
            Contains extension methods for <see cref="T:Elsa.Workflows.Contracts.IWorkflowRunner"/>.
            </summary>
        </member>
        <member name="M:Elsa.Extensions.WorkflowRunnerExtensions.RunUntilEndAsync(Elsa.Workflows.Contracts.IWorkflowRunner,Elsa.Workflows.Contracts.IActivity,System.Func{Elsa.Workflows.State.WorkflowState,Elsa.Workflows.Models.Bookmark,Elsa.Workflows.Options.RunWorkflowOptions,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Runs a workflow until its end, automatically resuming any bookmark it encounters.
            </summary>
        </member>
    </members>
</doc>
